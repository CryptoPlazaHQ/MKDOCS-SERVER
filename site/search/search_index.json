{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Red de MiniPCs Inteligentes \u2013 Infraestructura Modular Descentralizada","text":""},{"location":"#vision-general-del-proyecto","title":"Visi\u00f3n General del Proyecto","text":"<p>Bienvenido a la documentaci\u00f3n de la red de MiniPCs inteligentes. Este proyecto est\u00e1 dise\u00f1ado para construir y gestionar una infraestructura descentralizada de nodos (MiniPCs con Windows 10/11), controlada de forma remota y segura.</p> <p>El objetivo es ofrecer una plataforma robusta y escalable para servicios distribuidos, manteniendo un control centralizado sobre la configuraci\u00f3n, el monitoreo y la seguridad de cada nodo.</p>"},{"location":"#arquitectura","title":"Arquitectura","text":"<p>La arquitectura se basa en un enfoque modular y por capas:</p> <ul> <li>Capa de Acceso: Conexi\u00f3n segura a cada nodo mediante SSH sobre IPs p\u00fablicas fijas, con firewalls configurados para restringir el acceso.</li> <li>Capa de Inventario: NetBox act\u00faa como la \u00fanica fuente de verdad (SSoT) para todos los recursos de la red (IPs, dispositivos, sitios, clientes).</li> <li>Capa de Automatizaci\u00f3n: Ansible se utiliza para la gesti\u00f3n de la configuraci\u00f3n, instalaci\u00f3n de software y ejecuci\u00f3n de tareas en masa, consultando el inventario de NetBox en tiempo real.</li> <li>Capa de Monitoreo: Un stack de Prometheus y Grafana recopila m\u00e9tricas de cada nodo y las presenta en dashboards visuales para un control proactivo de la salud y el rendimiento de la red.</li> </ul>"},{"location":"#guia-de-inicio","title":"Gu\u00eda de Inicio","text":"<p>Para empezar a explorar la documentaci\u00f3n, utilice la barra de navegaci\u00f3n para moverse a trav\u00e9s de las distintas fases del proyecto. Cada secci\u00f3n contiene gu\u00edas paso a paso, explicaciones conceptuales y scripts listos para usar.</p>"},{"location":"extras/checklists/","title":"\ud83e\uddfe Checklists y Manuales de Operaciones Est\u00e1ndar (SOPs)","text":""},{"location":"extras/checklists/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<p>Centralizar los checklists operativos m\u00e1s importantes en un solo lugar. Estos checklists son la base para la consistencia, la calidad y la delegaci\u00f3n de tareas. Deben ser tratados como documentos vivos y mejorados continuamente.</p>"},{"location":"extras/checklists/#sop-01-onboarding-de-un-nuevo-nodo","title":"\u2705 SOP-01: Onboarding de un Nuevo Nodo","text":"<p>Prop\u00f3sito: A\u00f1adir un \u00fanico nodo nuevo a la infraestructura gestionada.</p> <p>Responsables: Operador Local, Gestor Remoto.</p>"},{"location":"extras/checklists/#fase-i-aprovisionamiento-fisico-operador-local","title":"Fase I: Aprovisionamiento F\u00edsico (Operador Local)","text":"<ul> <li>[ ] 1. Conexi\u00f3n F\u00edsica: El MiniPC est\u00e1 conectado al switch y a la corriente.</li> <li>[ ] 2. Configuraci\u00f3n de Red: Se ha asignado una IP p\u00fablica fija, m\u00e1scara, gateway y DNS al sistema operativo.</li> <li>[ ] 3. Habilitaci\u00f3n de Acceso: El script <code>enable-ssh.ps1</code> ha sido ejecutado como Administrador.</li> <li>[ ] 4. Validaci\u00f3n Local:<ul> <li>[ ] <code>ipconfig</code> muestra la IP correcta.</li> <li>[ ] <code>ping &lt;gateway&gt;</code> es exitoso.</li> <li>[ ] <code>ping 8.8.8.8</code> es exitoso.</li> <li>[ ] <code>Get-Service sshd</code> muestra el servicio como <code>Running</code> y <code>Automatic</code>.</li> </ul> </li> <li>[ ] 5. Notificaci\u00f3n: Se ha comunicado al Gestor Remoto que el nodo est\u00e1 listo, indicando la IP asignada.</li> </ul>"},{"location":"extras/checklists/#fase-ii-integracion-logica-gestor-remoto","title":"Fase II: Integraci\u00f3n L\u00f3gica (Gestor Remoto)","text":"<ul> <li>[ ] 1. Validaci\u00f3n Remota:<ul> <li>[ ] <code>ping &lt;nueva_ip&gt;</code> es exitoso.</li> <li>[ ] <code>nc -zv &lt;nueva_ip&gt; 22</code> confirma que el puerto SSH est\u00e1 abierto.</li> <li>[ ] La conexi\u00f3n <code>ssh admin@&lt;nueva_ip&gt;</code> es exitosa.</li> </ul> </li> <li>[ ] 2. Registro en NetBox:<ul> <li>[ ] El nuevo objeto de dispositivo ha sido creado.</li> <li>[ ] La direcci\u00f3n IP ha sido asignada al dispositivo.</li> <li>[ ] El dispositivo ha sido asignado al Tenant correcto.</li> <li>[ ] El dispositivo ha sido etiquetado con el Tag correcto.</li> </ul> </li> <li>[ ] 3. Ejecuci\u00f3n de Automatizaci\u00f3n:<ul> <li>[ ] Se ha verificado que el nuevo host aparece en el inventario din\u00e1mico de Ansible.</li> <li>[ ] Se han ejecutado los playbooks de configuraci\u00f3n base (instalaci\u00f3n, monitoreo, hardening) limitando la ejecuci\u00f3n al nuevo host (<code>--limit &lt;hostname&gt;</code>).</li> </ul> </li> <li>[ ] 4. Verificaci\u00f3n de Monitoreo:<ul> <li>[ ] El nuevo host aparece como <code>UP</code> en la p\u00e1gina de Targets de Prometheus.</li> <li>[ ] Las m\u00e9tricas del nuevo host son visibles en los dashboards de Grafana.</li> </ul> </li> </ul>"},{"location":"extras/checklists/#sop-02-descomisionamiento-de-un-nodo","title":"\u2705 SOP-02: Descomisionamiento de un Nodo","text":"<p>Prop\u00f3sito: Retirar un nodo de la infraestructura de forma segura y limpia.</p> <p>Responsable: Gestor Remoto.</p> <ul> <li>[ ] 1. Exclusi\u00f3n de la Automatizaci\u00f3n:<ul> <li>[ ] En NetBox, cambiar el Status del dispositivo de <code>Active</code> a <code>Decommissioning</code> o <code>Offline</code>. Esto lo excluir\u00e1 autom\u00e1ticamente de la mayor\u00eda de los playbooks y del monitoreo.</li> </ul> </li> <li>[ ] 2. Limpieza de Servicios (Opcional):<ul> <li>[ ] Ejecutar un playbook de \"offboarding\" que desinstale el software de monitoreo, elimine las reglas de firewall y deshabilite el acceso SSH.</li> </ul> </li> <li>[ ] 3. Eliminaci\u00f3n de Registros:<ul> <li>[ ] Eliminar el objeto de dispositivo de NetBox.</li> <li>[ ] Liberar la direcci\u00f3n IP en el IPAM de NetBox, marc\u00e1ndola como <code>Deprecated</code> o <code>Available</code>.</li> </ul> </li> <li>[ ] 4. Limpieza de Monitoreo y Backups:<ul> <li>[ ] Verificar que el nodo ha desaparecido de Prometheus.</li> <li>[ ] Excluir el nodo de cualquier configuraci\u00f3n de backup espec\u00edfica si existiera.</li> </ul> </li> <li>[ ] 5. Notificar al Operador Local: Comunicar que el nodo ha sido retirado l\u00f3gicamente y puede ser desconectado f\u00edsicamente.</li> </ul>"},{"location":"extras/checklists/#sop-03-prueba-de-restauracion-de-backups-trimestral","title":"\u2705 SOP-03: Prueba de Restauraci\u00f3n de Backups (Trimestral)","text":"<p>Prop\u00f3sito: Verificar la integridad y la viabilidad de las copias de seguridad del plano de control.</p> <p>Responsable: Gestor Remoto.</p> <ul> <li>[ ] 1. Aprovisionar un Servidor de Restauraci\u00f3n Temporal:<ul> <li>[ ] Levantar un nuevo VPS limpio.</li> </ul> </li> <li>[ ] 2. Descargar el \u00daltimo Backup:<ul> <li>[ ] Obtener el \u00faltimo archivo <code>.tar.gz</code> del backup desde el almacenamiento off-site (ej: Rclone).</li> </ul> </li> <li>[ ] 3. Restaurar Servicios:<ul> <li>[ ] Desplegar una nueva instancia de NetBox y Grafana con Docker.</li> <li>[ ] Seguir el manual de restauraci\u00f3n documentado para importar el dump de la base de datos de NetBox y los datos del volumen de Grafana.</li> </ul> </li> <li>[ ] 4. Validar la Restauraci\u00f3n:<ul> <li>[ ] Iniciar sesi\u00f3n en la instancia restaurada de NetBox y verificar que los datos (dispositivos, IPs, etc.) son correctos.</li> <li>[ ] Iniciar sesi\u00f3n en la instancia restaurada de Grafana y verificar que los dashboards y las fuentes de datos est\u00e1n presentes.</li> </ul> </li> <li>[ ] 5. Medir y Documentar:<ul> <li>[ ] Registrar el tiempo total que tom\u00f3 el proceso de restauraci\u00f3n (RTO - Recovery Time Objective).</li> <li>[ ] Actualizar el manual de restauraci\u00f3n con cualquier lecci\u00f3n aprendida.</li> </ul> </li> <li>[ ] 6. Destruir el Entorno Temporal:<ul> <li>[ ] Eliminar el VPS de restauraci\u00f3n.</li> </ul> </li> </ul>"},{"location":"extras/glosario/","title":"\ud83d\udcda Glosario T\u00e9cnico","text":""},{"location":"extras/glosario/#a","title":"A","text":"<ul> <li>Ansible: Herramienta de automatizaci\u00f3n de TI de c\u00f3digo abierto que permite la gesti\u00f3n de configuraci\u00f3n, el despliegue de aplicaciones y la orquestaci\u00f3n de tareas de forma agentless (sin agentes).</li> <li>Ansible Vault: Una caracter\u00edstica de Ansible que permite encriptar archivos de variables o variables individuales para gestionar secretos como contrase\u00f1as y tokens de API.</li> <li>API (Application Programming Interface): Una interfaz que permite que dos o m\u00e1s aplicaciones de software se comuniquen entre s\u00ed. Usamos la API de NetBox para la automatizaci\u00f3n.</li> <li>AWX: La versi\u00f3n de c\u00f3digo abierto y comunitaria de Ansible Tower. Proporciona una interfaz web para gestionar ejecuciones de Ansible.</li> </ul>"},{"location":"extras/glosario/#c","title":"C","text":"<ul> <li>Checklist: Una lista de tareas estandarizadas que se deben realizar durante un proceso espec\u00edfico (ej: onboarding de un nuevo nodo) para asegurar la consistencia y la calidad.</li> <li>Chocolatey: Un gestor de paquetes para Windows que permite instalar, actualizar y desinstalar software desde la l\u00ednea de comandos de forma desatendida.</li> <li>CIS Benchmarks (Center for Internet Security): Gu\u00edas de configuraci\u00f3n de seguridad reconocidas a nivel mundial para fortalecer sistemas operativos, software y dispositivos de red.</li> <li>CRUD (Create, Read, Update, Delete): Las cuatro funciones b\u00e1sicas de la persistencia de datos. Una API RESTful permite realizar estas cuatro operaciones sobre un recurso.</li> </ul>"},{"location":"extras/glosario/#d","title":"D","text":"<ul> <li>Dashboard: En Grafana, un conjunto de una o m\u00e1s visualizaciones (paneles) organizadas en una pantalla para proporcionar una visi\u00f3n general o espec\u00edfica de un sistema.</li> <li>Defensa en Profundidad (Defense in Depth): Una estrategia de ciberseguridad que implementa m\u00faltiples capas de controles de seguridad, asumiendo que ninguna capa es impenetrable.</li> <li>Docker: Una plataforma de software que permite crear, desplegar y gestionar aplicaciones en contenedores aislados.</li> <li>Docker Compose: Una herramienta para definir y ejecutar aplicaciones Docker de m\u00faltiples contenedores. Utiliza archivos YAML para configurar los servicios de la aplicaci\u00f3n.</li> </ul>"},{"location":"extras/glosario/#e","title":"E","text":"<ul> <li>Exporter (Prometheus): Un software que se ejecuta en un host a monitorear y que expone las m\u00e9tricas de ese host en un formato que Prometheus puede entender y recolectar.</li> </ul>"},{"location":"extras/glosario/#g","title":"G","text":"<ul> <li>Grafana: Una plataforma de c\u00f3digo abierto para la visualizaci\u00f3n y el an\u00e1lisis de datos interactivos. Se conecta a fuentes de datos como Prometheus para crear dashboards y alertas.</li> </ul>"},{"location":"extras/glosario/#h","title":"H","text":"<ul> <li>Hardening (Fortalecimiento): El proceso de asegurar un sistema mediante la reducci\u00f3n de su superficie de ataque, deshabilitando servicios innecesarios y aplicando pol\u00edticas de seguridad estrictas.</li> </ul>"},{"location":"extras/glosario/#i","title":"I","text":"<ul> <li>Idempotencia: Una propiedad de una operaci\u00f3n que asegura que, si se aplica varias veces, el resultado ser\u00e1 el mismo que si se aplicara una sola vez. Es un principio clave de Ansible.</li> <li>Infraestructura como C\u00f3digo (IaC): La pr\u00e1ctica de gestionar y aprovisionar la infraestructura de TI a trav\u00e9s de archivos de definici\u00f3n legibles por m\u00e1quina (como los playbooks de Ansible), en lugar de la configuraci\u00f3n manual.</li> <li>Inventario (Ansible): Un archivo o script que proporciona a Ansible la lista de nodos que debe gestionar.</li> </ul>"},{"location":"extras/glosario/#l","title":"L","text":"<ul> <li>Loki: Un sistema de agregaci\u00f3n de logs de c\u00f3digo abierto, inspirado en Prometheus, que est\u00e1 dise\u00f1ado para ser altamente eficiente en costos y f\u00e1cil de operar.</li> </ul>"},{"location":"extras/glosario/#m","title":"M","text":"<ul> <li>MFA (Multi-Factor Authentication): Un m\u00e9todo de seguridad que requiere que el usuario proporcione dos o m\u00e1s factores de verificaci\u00f3n para acceder a un recurso, como una contrase\u00f1a y un c\u00f3digo de un solo uso.</li> </ul>"},{"location":"extras/glosario/#n","title":"N","text":"<ul> <li>NetBox: Una herramienta de c\u00f3digo abierto para el modelado y la documentaci\u00f3n de la infraestructura de red. Act\u00faa como una Fuente \u00danica de Verdad (SSoT).</li> </ul>"},{"location":"extras/glosario/#p","title":"P","text":"<ul> <li>Playbook (Ansible): Un archivo YAML que contiene una lista ordenada de tareas a ejecutar por Ansible en un conjunto de hosts.</li> <li>Prometheus: Un sistema de monitoreo y alerta de c\u00f3digo abierto que recolecta y almacena sus m\u00e9tricas como datos de series temporales.</li> <li>PromQL: El lenguaje de consulta funcional de Prometheus, utilizado para seleccionar y agregar datos de series temporales en tiempo real.</li> </ul>"},{"location":"extras/glosario/#s","title":"S","text":"<ul> <li>SSH (Secure Shell): Un protocolo de red criptogr\u00e1fico para operar servicios de red de forma segura sobre una red no segura.</li> <li>SSoT (Single Source of Truth): La pr\u00e1ctica de estructurar la informaci\u00f3n de manera que cada dato maestro se edite en un solo lugar. En este proyecto, NetBox es la SSoT para la infraestructura.</li> </ul>"},{"location":"extras/glosario/#t","title":"T","text":"<ul> <li>Tag (Etiqueta): Un par clave-valor de metadatos que se puede asignar a los objetos en NetBox para una clasificaci\u00f3n flexible.</li> <li>Tenant (Inquilino): Un objeto en NetBox que representa a un cliente o a una unidad de negocio, permitiendo la agrupaci\u00f3n l\u00f3gica de los recursos.</li> </ul>"},{"location":"fase0_poc/setup-inicial/","title":"\ud83e\uddea Fase 0 \u2013 PoC M\u00ednima y Setup Inicial","text":""},{"location":"fase0_poc/setup-inicial/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<p>El objetivo de esta fase es establecer una Prueba de Concepto (PoC). Se trata de validar la conexi\u00f3n m\u00e1s fundamental: que t\u00fa, como gestor remoto desde Colombia, puedas acceder de forma fiable a un \u00fanico MiniPC en Estados Unidos. Este paso es la base sobre la que se construir\u00e1 toda la infraestructura.</p>"},{"location":"fase0_poc/setup-inicial/#roles","title":"roles","text":"<ul> <li>Operador Local (EE.UU.): La persona que tiene acceso f\u00edsico a los equipos. Su tarea es conectar los cables, encender los MiniPCs y realizar la configuraci\u00f3n inicial de red si es necesario.</li> <li>Gestor Remoto (T\u00fa, en Colombia): El arquitecto y administrador de toda la red. Tu trabajo es configurar, gestionar, automatizar y monitorear todos los nodos de forma remota.</li> </ul>"},{"location":"fase0_poc/setup-inicial/#infraestructura-minima-requerida","title":"\ud83e\uddf1 Infraestructura M\u00ednima Requerida","text":"Rol Equipo Ubicaci\u00f3n Detalles Clave Nodo Remoto (Gestionado) 1x MiniPC E2 EE.UU. Conectado a Internet. Debe tener una IP p\u00fablica fija asignada por el ISP. Plano de Control (Gestor) Tu Laptop/PC Colombia Desde aqu\u00ed ejecutar\u00e1s todos los comandos de gesti\u00f3n (SSH, Ansible, etc.). Red F\u00edsica Switch PoE &amp; Router EE.UU. El MiniPC debe estar conectado al router que le provee la IP p\u00fablica."},{"location":"fase0_poc/setup-inicial/#verificacion-de-conectividad-el-primer-ping","title":"\ud83d\udce1 Verificaci\u00f3n de Conectividad: El Primer Ping","text":"<p>Antes de cualquier configuraci\u00f3n compleja, debemos verificar la conectividad a nivel de red. Tu ISP en EE.UU. te ha proporcionado la siguiente informaci\u00f3n:</p> <ul> <li>Bloque de IPs: <code>50.190.105.81 \u2013 93</code></li> <li>Puerta de Enlace (Gateway): <code>50.190.105.94</code></li> <li>M\u00e1scara de Subred: <code>255.255.255.240</code></li> </ul> <p>El operador local debe haber configurado el primer MiniPC para usar la IP <code>50.190.105.81</code>.</p> <p>Desde tu terminal en Colombia, ejecuta dos pruebas de <code>ping</code>:</p> <ol> <li> <p>Ping a la Puerta de Enlace: <code>bash     ping 50.190.105.94</code></p> <ul> <li>Prop\u00f3sito: Esto verifica que puedes llegar a la \"puerta de entrada\" de la red remota. Si esto funciona, tu conexi\u00f3n a Internet y el enrutamiento b\u00e1sico hacia el ISP de EE.UU. son correctos.</li> </ul> </li> <li> <p>Ping al Nodo: <code>bash     ping 50.190.105.81</code></p> <ul> <li>Prop\u00f3sito: Esto verifica que el MiniPC espec\u00edfico est\u00e1 encendido, tiene la IP correctamente configurada y su firewall no est\u00e1 bloqueando las solicitudes de ping (ICMP).</li> </ul> </li> </ol> <p>Si ambos pings reciben respuesta, la conectividad de red b\u00e1sica est\u00e1 confirmada.</p>"},{"location":"fase0_poc/setup-inicial/#habilitacion-del-acceso-remoto-ssh","title":"\ud83d\udd11 Habilitaci\u00f3n del Acceso Remoto (SSH)","text":"<p>Ahora, necesitas una forma de ejecutar comandos en el nodo. Usaremos SSH.</p> <p>Si el MiniPC tiene una instalaci\u00f3n limpia de Windows, el servidor SSH no estar\u00e1 activado. El operador local debe ejecutar el siguiente script de PowerShell como Administrador en el MiniPC. Este script se detalla en la siguiente secci\u00f3n.</p> <pre><code># Script para habilitar el servidor OpenSSH en Windows\nAdd-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0\nStart-Service sshd\nSet-Service -Name sshd -StartupType 'Automatic'\nNew-NetFirewallRule -Name sshd -DisplayName 'SSH Server' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22\n</code></pre> <p>Una vez que el operador confirme que el script se ha ejecutado, puedes intentar la conexi\u00f3n desde Colombia:</p> <pre><code># Reemplaza \"admin\" con el nombre de usuario del MiniPC\nssh admin@50.190.105.81\n</code></pre> <p>Si la conexi\u00f3n es exitosa, has validado el pilar fundamental de tu operaci\u00f3n remota.</p>"},{"location":"fase0_poc/setup-inicial/#checklist-de-validacion-de-la-fase-0","title":"\u2705 Checklist de Validaci\u00f3n de la Fase 0","text":"<ul> <li>[ ] El rol del operador local y del gestor remoto est\u00e1n claramente definidos.</li> <li>[ ] El MiniPC est\u00e1 f\u00edsicamente conectado y encendido en EE.UU.</li> <li>[ ] La IP <code>50.190.105.81</code> est\u00e1 correctamente asignada al MiniPC.</li> <li>[ ] El <code>ping</code> a la puerta de enlace (<code>.94</code>) es exitoso desde Colombia.</li> <li>[ ] El <code>ping</code> al nodo (<code>.81</code>) es exitoso desde Colombia.</li> <li>[ ] El script para habilitar SSH ha sido ejecutado por el operador local.</li> <li>[ ] La conexi\u00f3n SSH al nodo desde Colombia es exitosa.</li> <li>[ ] Las credenciales de acceso (usuario/contrase\u00f1a o clave SSH) est\u00e1n guardadas de forma segura en un gestor de contrase\u00f1as (como Bitwarden, 1Password, etc.).</li> </ul>"},{"location":"fase0_poc/validaciones/","title":"\u2705 Fase 0 \u2013 Validaciones de Red y Conectividad","text":""},{"location":"fase0_poc/validaciones/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<p>Documentar un conjunto de pruebas y comandos de validaci\u00f3n que tanto el operador local como el gestor remoto deben ejecutar para confirmar que la configuraci\u00f3n inicial del nodo es correcta y que la comunicaci\u00f3n es fluida. Este proceso de validaci\u00f3n es crucial para diagnosticar problemas tempranamente.</p>"},{"location":"fase0_poc/validaciones/#1-validaciones-del-operador-local-en-el-minipc-de-eeuu","title":"1\ufe0f\u20e3 Validaciones del Operador Local (En el MiniPC de EE.UU.)","text":"<p>Despu\u00e9s de asignar la IP fija y ejecutar el script <code>enable-ssh.ps1</code>, el operador local debe realizar estas comprobaciones desde una ventana de PowerShell en el propio MiniPC.</p>"},{"location":"fase0_poc/validaciones/#a-verificar-la-configuracion-ip","title":"a) Verificar la Configuraci\u00f3n IP","text":"<pre><code>ipconfig\n</code></pre> <ul> <li>Qu\u00e9 buscar:</li> <li>Direcci\u00f3n IPv4: Debe ser la IP p\u00fablica asignada (ej: <code>50.190.105.81</code>).</li> <li>M\u00e1scara de subred: Debe coincidir con la del ISP (ej: <code>255.255.255.240</code>).</li> <li>Puerta de enlace predeterminada: Debe ser el gateway del ISP (ej: <code>50.190.105.94</code>).</li> </ul>"},{"location":"fase0_poc/validaciones/#b-probar-la-conexion-a-la-puerta-de-enlace","title":"b) Probar la Conexi\u00f3n a la Puerta de Enlace","text":"<pre><code>ping 50.190.105.94\n</code></pre> <ul> <li>Prop\u00f3sito: Confirma que el MiniPC puede comunicarse con su router o gateway m\u00e1s cercano. Si esto falla, hay un problema de red local (cable, switch, configuraci\u00f3n IP).</li> </ul>"},{"location":"fase0_poc/validaciones/#c-probar-la-salida-a-internet","title":"c) Probar la Salida a Internet","text":"<pre><code>ping 8.8.8.8\n</code></pre> <ul> <li>Prop\u00f3sito: Confirma que el nodo puede alcanzar un servidor externo en Internet (8.8.8.8 es un servidor DNS p\u00fablico de Google). Si el paso anterior funcion\u00f3 pero este no, podr\u00eda haber un problema en el router del ISP.</li> </ul>"},{"location":"fase0_poc/validaciones/#d-verificar-la-ip-publica-real","title":"d) Verificar la IP P\u00fablica Real","text":"<pre><code>curl ifconfig.me\n</code></pre> <ul> <li>Prop\u00f3sito: Confirma que la IP p\u00fablica con la que el nodo sale a Internet es la misma que se configur\u00f3 manualmente. Esto es vital para asegurar que no hay un doble NAT o una configuraci\u00f3n de red inesperada.</li> </ul>"},{"location":"fase0_poc/validaciones/#e-comprobar-el-estado-del-servicio-ssh","title":"e) Comprobar el Estado del Servicio SSH","text":"<pre><code>Get-Service sshd\n</code></pre> <ul> <li>Qu\u00e9 buscar:</li> <li>Status: Debe ser <code>Running</code>.</li> <li>StartType: Debe ser <code>Automatic</code>.</li> </ul>"},{"location":"fase0_poc/validaciones/#2-validaciones-del-gestor-remoto-desde-colombia","title":"2\ufe0f\u20e3 Validaciones del Gestor Remoto (Desde Colombia)","text":"<p>Una vez que el operador local ha confirmado que todo est\u00e1 correcto en el sitio, es tu turno para validar desde tu puesto de gesti\u00f3n.</p>"},{"location":"fase0_poc/validaciones/#a-validar-la-ruta-de-red","title":"a) Validar la Ruta de Red","text":"<pre><code># En Linux/macOS\ntraceroute 50.190.105.81\n\n# En Windows\ntracert 50.190.105.81\n</code></pre> <ul> <li>Prop\u00f3sito: Muestra todos los \"saltos\" (routers) por los que pasa tu conexi\u00f3n hasta llegar al nodo. Es \u00fatil para diagnosticar d\u00f3nde podr\u00eda estar un problema de latencia o un bloqueo de red si el ping no funcionara.</li> </ul>"},{"location":"fase0_poc/validaciones/#b-probar-la-apertura-del-puerto-ssh","title":"b) Probar la Apertura del Puerto SSH","text":"<p>Necesitas verificar si el puerto 22 est\u00e1 abierto y escuchando en el nodo remoto. Un simple <code>ping</code> no es suficiente.</p> <pre><code># Usando Netcat (nc), disponible en Linux/macOS/WSL\nnc -zv 50.190.105.81 22\n</code></pre> <ul> <li>Respuesta esperada: <code>Connection to 50.190.105.81 port 22 [tcp/ssh] succeeded!</code></li> <li>Si falla: Significa que algo est\u00e1 bloqueando el puerto 22. Las causas m\u00e1s probables son:</li> <li>La regla del Firewall de Windows no se aplic\u00f3 correctamente.</li> <li>El firewall del ISP (a nivel de proveedor) est\u00e1 bloqueando el puerto.</li> </ul>"},{"location":"fase0_poc/validaciones/#c-intento-de-conexion-ssh-final","title":"c) Intento de Conexi\u00f3n SSH Final","text":"<pre><code>ssh -v admin@50.190.105.81\n</code></pre> <ul> <li>Prop\u00f3sito: Es la prueba definitiva. El flag <code>-v</code> (verbose) te dar\u00e1 una salida detallada del proceso de conexi\u00f3n, lo que es extremadamente \u00fatil para diagnosticar problemas de autenticaci\u00f3n (ej: clave incorrecta, permisos de archivo, etc.).</li> </ul>"},{"location":"fase0_poc/powershell/enable-ssh/","title":"\u2699\ufe0f Script PowerShell: Habilitar Acceso SSH en Windows","text":""},{"location":"fase0_poc/powershell/enable-ssh/#proposito-del-script","title":"\ud83c\udfaf Prop\u00f3sito del Script","text":"<p>Este script de PowerShell automatiza todos los pasos necesarios para activar y configurar el servidor OpenSSH en un MiniPC con Windows 10 o 11. Su objetivo es preparar el nodo para que pueda ser gestionado remotamente de forma segura, eliminando la necesidad de acceso f\u00edsico o de Escritorio Remoto (RDP) para tareas administrativas.</p>"},{"location":"fase0_poc/powershell/enable-ssh/#el-codigo-completo","title":"\ud83d\udcdc El C\u00f3digo Completo","text":"<pre><code># enable-ssh.ps1\n# ------------------------------------------\n# Activaci\u00f3n y configuraci\u00f3n del servidor SSH en Windows 10/11\n# Ejecutar como administrador\n# ------------------------------------------\n\n# Escribe un mensaje en la consola para informar al operador de lo que est\u00e1 sucediendo.\nWrite-Host \"\ud83d\udd27 Habilitando el componente OpenSSH.Server en este equipo...\"\n\n# Instala el servicio SSH si no est\u00e1 presente. Es una capacidad opcional de Windows.\n# El modificador -Online significa que busca la capacidad en Windows Update si es necesario.\nAdd-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0\n\n# Inicia el servicio SSH (sshd). Si ya estaba en ejecuci\u00f3n, no hace nada.\nWrite-Host \"\ud83d\ude80 Iniciando el servicio sshd...\"\nStart-Service sshd\n\n# Configura el servicio para que se inicie autom\u00e1ticamente cada vez que el sistema arranque.\n# Esto es crucial para asegurar el acceso remoto persistente despu\u00e9s de reinicios.\nWrite-Host \"\u2699\ufe0f Configurando el servicio para inicio autom\u00e1tico...\"\nSet-Service -Name sshd -StartupType 'Automatic'\n\n# Crea una regla en el Firewall de Windows para permitir conexiones entrantes en el puerto 22 (el puerto est\u00e1ndar de SSH).\n# Sin esta regla, el firewall bloquear\u00eda todos los intentos de conexi\u00f3n.\nWrite-Host \"\ud83d\udee1\ufe0f Creando regla en el Firewall para el puerto 22...\"\nNew-NetFirewallRule -Name sshd -DisplayName 'SSH Server' `\n  -Enabled True -Direction Inbound -Protocol TCP `\n  -Action Allow -LocalPort 22\n\n# Verifica el estado final del servicio y lo muestra en pantalla.\nWrite-Host \"\u2705 Verificaci\u00f3n final del estado del servicio:\"\nGet-Service sshd\n\nWrite-Host \"`n\ud83c\udf89 \u00a1\u00c9xito! El servidor SSH est\u00e1 habilitado y configurado. El nodo est\u00e1 listo para acceso remoto.\"\n</code></pre>"},{"location":"fase0_poc/powershell/enable-ssh/#como-ejecutar-el-script","title":"\ud83d\ude80 \u00bfC\u00f3mo Ejecutar el Script?","text":"<p>El operador local en EE.UU. debe ejecutar este script con privilegios de Administrador. Hay dos maneras de hacerlo:</p>"},{"location":"fase0_poc/powershell/enable-ssh/#metodo-1-ejecucion-local-copiando-el-archivo","title":"M\u00e9todo 1: Ejecuci\u00f3n Local (Copiando el archivo)","text":"<ol> <li>Guarda el c\u00f3digo anterior en un archivo llamado <code>enable-ssh.ps1</code>.</li> <li>Transfiere el archivo al MiniPC (v\u00eda USB, email, etc.).</li> <li>Haz clic derecho sobre el archivo y selecciona \"Ejecutar con PowerShell\". Aseg\u00farate de que se ejecute en una ventana de PowerShell (Administrador).</li> </ol>"},{"location":"fase0_poc/powershell/enable-ssh/#metodo-2-ejecucion-remota-recomendado","title":"M\u00e9todo 2: Ejecuci\u00f3n Remota (Recomendado)","text":"<p>Esta es la forma m\u00e1s profesional. Alojas el script en un \u00fanico lugar (como un Gist de GitHub) y el operador solo necesita ejecutar un comando para descargarlo y ejecutarlo al mismo tiempo. Esto asegura que siempre se use la versi\u00f3n m\u00e1s actualizada del script.</p> <ol> <li> <p>Aloja el script: Crea un Gist p\u00fablico en GitHub y pega el c\u00f3digo del script. Obt\u00e9n la URL \"Raw\" del archivo.</p> </li> <li> <p>Comando de ejecuci\u00f3n para el operador: El operador abre PowerShell (Administrador) en el MiniPC y ejecuta:</p> <p>```powershell</p> </li> </ol>"},{"location":"fase0_poc/powershell/enable-ssh/#reemplaza-la-url-con-la-url-raw-de-tu-gist","title":"Reemplaza la URL con la URL \"Raw\" de tu Gist","text":"<p>irm https://gist.githubusercontent.com/tu-usuario/tu-gist-id/raw/enable-ssh.ps1 | iex ```</p> <ul> <li><code>irm</code> (<code>Invoke-RestMethod</code>): Descarga el contenido de la URL.</li> <li><code>|</code> (Pipe): Env\u00eda la salida del primer comando (el texto del script) al siguiente.</li> <li><code>iex</code> (<code>Invoke-Expression</code>): Ejecuta el texto recibido como un comando de PowerShell.</li> </ul>"},{"location":"fase0_poc/powershell/enable-ssh/#resultado-esperado","title":"\u2705 Resultado Esperado","text":"<p>Independientemente del m\u00e9todo, el resultado final es que el MiniPC: - Queda accesible v\u00eda SSH desde Internet a trav\u00e9s de su IP p\u00fablica (ej: <code>ssh admin@50.190.105.81</code>). - No interfiere con el funcionamiento de otras aplicaciones como Salad, Honeygain o EarnApp. - El acceso SSH persistir\u00e1 incluso despu\u00e9s de que el MiniPC se reinicie.</p>"},{"location":"fase1_acceso/asignacion-ips/","title":"\ud83c\udf10 Gu\u00eda de Asignaci\u00f3n de IP Fija para Operador Local","text":""},{"location":"fase1_acceso/asignacion-ips/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<p>Proporcionar al operador local en Estados Unidos un manual de operaciones claro y detallado para configurar una direcci\u00f3n IP p\u00fablica fija en cada MiniPC Windows. Este proceso es la base para que el gestor remoto pueda acceder a cada nodo de forma individual y predecible.</p>"},{"location":"fase1_acceso/asignacion-ips/#requisitos-previos","title":"\ud83d\udce6 Requisitos Previos","text":"<ul> <li>Acceso F\u00edsico: El operador debe tener acceso f\u00edsico al MiniPC.</li> <li>Credenciales de Administrador: Se necesita una cuenta de usuario en Windows con privilegios de administrador.</li> <li>Informaci\u00f3n de Red del ISP: El operador debe tener a mano los siguientes datos proporcionados por el proveedor de Internet (ej: Comcast, Spectrum):<ul> <li>La Direcci\u00f3n IP espec\u00edfica a asignar (ej: <code>50.190.105.82</code>).</li> <li>La M\u00e1scara de subred (ej: <code>255.255.255.240</code>).</li> <li>La Puerta de enlace predeterminada (Gateway) (ej: <code>50.190.105.94</code>).</li> <li>Los Servidores DNS (ej: <code>8.8.8.8</code> y <code>1.1.1.1</code> son buenas opciones p\u00fablicas).</li> </ul> </li> </ul>"},{"location":"fase1_acceso/asignacion-ips/#metodos-de-configuracion","title":"\ud83e\udded M\u00e9todos de Configuraci\u00f3n","text":"<p>Existen dos maneras de configurar la IP: a trav\u00e9s de la interfaz gr\u00e1fica (GUI) o mediante la l\u00ednea de comandos (PowerShell). El operador puede elegir la que le resulte m\u00e1s c\u00f3moda.</p>"},{"location":"fase1_acceso/asignacion-ips/#metodo-1-interfaz-grafica-gui","title":"\ud83d\udd27 M\u00e9todo 1: Interfaz Gr\u00e1fica (GUI)","text":"<p>Este m\u00e9todo es visual y recomendado para quienes no se sienten c\u00f3modos con la l\u00ednea de comandos.</p> <ol> <li> <p>Abrir Conexiones de Red:</p> <ul> <li>Presiona la tecla de <code>Windows + R</code> para abrir el cuadro de di\u00e1logo \"Ejecutar\".</li> <li>Escribe <code>ncpa.cpl</code> y presiona Enter. Esto abrir\u00e1 directamente la ventana de Conexiones de Red.</li> </ul> </li> <li> <p>Acceder a Propiedades:</p> <ul> <li>Busca la conexi\u00f3n de red activa (usualmente llamada \"Ethernet\").</li> <li>Haz clic derecho sobre ella y selecciona \"Propiedades\".</li> </ul> </li> <li> <p>Configurar IPv4:</p> <ul> <li>En la lista, selecciona \"Protocolo de Internet versi\u00f3n 4 (TCP/IPv4)\".</li> <li>Haz clic en el bot\u00f3n \"Propiedades\".</li> </ul> </li> <li> <p>Ingresar los Datos de Red:</p> <ul> <li>Selecciona la opci\u00f3n \"Usar la siguiente direcci\u00f3n IP\".</li> <li>Rellena los campos con la informaci\u00f3n del ISP:<ul> <li>Direcci\u00f3n IP: <code>50.190.105.82</code></li> <li>M\u00e1scara de subred: <code>255.255.255.240</code></li> <li>Puerta de enlace predeterminada: <code>50.190.105.94</code></li> </ul> </li> <li>Selecciona la opci\u00f3n \"Usar las siguientes direcciones de servidor DNS\".<ul> <li>Servidor DNS preferido: <code>8.8.8.8</code></li> <li>Servidor DNS alternativo: <code>1.1.1.1</code></li> </ul> </li> </ul> </li> <li> <p>Guardar y Cerrar:</p> <ul> <li>Haz clic en \"Aceptar\" en ambas ventanas de propiedades para guardar los cambios.</li> <li>La conexi\u00f3n de red podr\u00eda reiniciarse brevemente.</li> </ul> </li> </ol>"},{"location":"fase1_acceso/asignacion-ips/#metodo-2-powershell-mas-rapido-y-automatizable","title":"\ud83d\udcbb M\u00e9todo 2: PowerShell (M\u00e1s R\u00e1pido y Automatizable)","text":"<p>Este m\u00e9todo es ideal para operadores con m\u00e1s experiencia o para automatizar el proceso en el futuro.</p> <ol> <li> <p>Abrir PowerShell como Administrador:</p> <ul> <li>Busca \"PowerShell\" en el men\u00fa de inicio, haz clic derecho y selecciona \"Ejecutar como administrador\".</li> </ul> </li> <li> <p>Identificar la Interfaz de Red:</p> <ul> <li>Ejecuta <code>Get-NetAdapter</code> para ver el nombre exacto de la interfaz de red (ej: \"Ethernet\", \"Ethernet 2\"). Anota el valor de la columna <code>Name</code>.</li> </ul> </li> <li> <p>Ejecutar el Comando de Configuraci\u00f3n:</p> <ul> <li>Copia y pega el siguiente bloque de comandos, reemplazando <code>\"Ethernet\"</code> si el nombre de tu interfaz es diferente, y ajustando las IPs si es necesario.</li> </ul> <p>```powershell</p> </li> <li> <p>Verificar: La configuraci\u00f3n se aplica inmediatamente. Puedes usar <code>ipconfig</code> para verificar que los cambios se hayan realizado.</p> </li> </ol>"},{"location":"fase1_acceso/asignacion-ips/#asigna-la-ip-estatica-la-mascara-de-subred-prefixlength-28-255255255240-y-el-gateway","title":"Asigna la IP est\u00e1tica, la m\u00e1scara de subred (PrefixLength 28 = 255.255.255.240) y el gateway","text":"<p>New-NetIPAddress -InterfaceAlias \"Ethernet\" <code>-IPAddress \"50.190.105.82\"</code>   -PrefixLength 28 `   -DefaultGateway \"50.190.105.94\"</p>"},{"location":"fase1_acceso/asignacion-ips/#configura-los-servidores-dns","title":"Configura los servidores DNS","text":"<p>Set-DnsClientServerAddress -InterfaceAlias \"Ethernet\" `   -ServerAddresses (\"8.8.8.8\", \"1.1.1.1\") ```</p>"},{"location":"fase1_acceso/asignacion-ips/#checklist-de-entrega-del-operador","title":"\u2705 Checklist de Entrega del Operador","text":"<p>Antes de notificar al gestor remoto que el nodo est\u00e1 listo, el operador local debe confirmar:</p> \u2705 Acci\u00f3n Comando de Verificaci\u00f3n \u2610 La IP est\u00e1 correctamente asignada. <code>ipconfig</code> \u2610 El nodo puede contactar a su gateway. <code>ping 50.190.105.94</code> \u2610 El nodo tiene salida a Internet. <code>ping 8.8.8.8</code> \u2610 El servicio SSH est\u00e1 corriendo. <code>Get-Service sshd</code> \u2610 El puerto 22 est\u00e1 abierto en el firewall. <code>Get-NetFirewallRule -DisplayName \"SSH Server\"</code> \u2610 Se han entregado las credenciales de <code>admin</code> al gestor remoto. (Confirmaci\u00f3n manual)"},{"location":"fase1_acceso/firewall-por-capas/","title":"\ud83d\udee1\ufe0f Arquitectura de Seguridad: Firewall por Capas","text":""},{"location":"fase1_acceso/firewall-por-capas/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<p>Comprender el concepto de Defensa en Profundidad (Defense in Depth) aplicado a la seguridad de red. Espec\u00edficamente, diferenciar entre el firewall que gestiona tu proveedor de Internet (ISP) y el firewall que t\u00fa gestionas en cada MiniPC con Windows, y entender c\u00f3mo ambos contribuyen a una postura de seguridad robusta.</p>"},{"location":"fase1_acceso/firewall-por-capas/#que-es-la-defensa-en-profundidad","title":"\ud83e\udd14 \u00bfQu\u00e9 es la Defensa en Profundidad?","text":"<p>La Defensa en Profundidad es una estrategia de ciberseguridad que no conf\u00eda en una \u00fanica barrera. En su lugar, implementa m\u00faltiples capas de controles de seguridad, asumiendo que una capa podr\u00eda fallar. Si un atacante logra superar una barrera, se encontrar\u00e1 con otra, y luego otra.</p> <p>En tu arquitectura, tienes al menos dos capas de firewall fundamentales.</p> <p></p>"},{"location":"fase1_acceso/firewall-por-capas/#capa-1-el-firewall-del-isp-la-muralla-exterior","title":"\ud83e\uddf1 Capa 1: El Firewall del ISP (La Muralla Exterior)","text":"<ul> <li>\u00bfQu\u00e9 es? Es un dispositivo f\u00edsico (generalmente parte de un router de borde o un equipo de seguridad dedicado) que se encuentra en la red de tu proveedor de Internet. Gestiona todo el tr\u00e1fico que entra y sale del bloque de IPs p\u00fablicas que te han asignado.</li> <li>\u00bfQui\u00e9n lo controla? El ISP. T\u00fa, como cliente, puedes solicitar cambios en su configuraci\u00f3n.</li> <li>\u00bfQu\u00e9 controla? El tr\u00e1fico a nivel de red. Puede bloquear puertos, protocolos o IPs de origen antes de que el tr\u00e1fico llegue siquiera a tus MiniPCs.</li> </ul> <p>Analog\u00eda: Es la muralla que rodea tu castillo. Detiene a los ej\u00e9rcitos invasores en la frontera, lejos de tu puerta principal.</p> <p>Acci\u00f3n Recomendada: Aunque no es estrictamente necesario si conf\u00edas en tu firewall de Windows, la mejor pr\u00e1ctica es pedirle al ISP que aplique una regla en su extremo. Puedes enviarles un ticket de soporte diciendo:</p> <p>\"Por favor, para nuestro bloque de IPs <code>50.190.105.80/28</code>, restrinjan todo el tr\u00e1fico entrante excepto el tr\u00e1fico TCP en el puerto 22 que se origine desde nuestra IP de gesti\u00f3n <code>TU.IP.PUBLICA.COLOMBIA</code>.\"</p> <p>Ventajas de esta capa: - Reduce el \"ruido\": Filtra la gran mayor\u00eda de escaneos y ataques automatizados, por lo que ni siquiera aparecer\u00e1n en los logs de tus MiniPCs. - Protecci\u00f3n Centralizada: Una sola regla en el ISP protege a todos tus nodos a la vez. - Seguridad Adicional: Si alguien comete un error y deshabilita el firewall en un MiniPC, esta capa externa seguir\u00eda protegi\u00e9ndolo.</p>"},{"location":"fase1_acceso/firewall-por-capas/#capa-2-el-firewall-de-windows-la-puerta-blindada","title":"\ud83d\udda5\ufe0f Capa 2: El Firewall de Windows (La Puerta Blindada)","text":"<ul> <li>\u00bfQu\u00e9 es? Es un componente de software que se ejecuta directamente en el sistema operativo de cada MiniPC.</li> <li>\u00bfQui\u00e9n lo controla? T\u00fa, a trav\u00e9s de la interfaz de Windows o, preferiblemente, de forma remota con PowerShell y Ansible.</li> <li>\u00bfQu\u00e9 controla? El tr\u00e1fico a nivel de host. Decide qu\u00e9 conexiones se le permite hacer a una aplicaci\u00f3n espec\u00edfica o qu\u00e9 puertos puede abrir el sistema operativo.</li> </ul> <p>Analog\u00eda: Es la puerta blindada de tu habitaci\u00f3n dentro del castillo. Aunque alguien haya saltado la muralla, todav\u00eda no puede entrar a tus aposentos.</p> <p>Acci\u00f3n Requerida: Esta capa es obligatoria y est\u00e1 bajo tu control total. Es aqu\u00ed donde implementas las reglas detalladas que creamos en la secci\u00f3n anterior, permitiendo el acceso SSH solo desde tu IP.</p> <p>Ventajas de esta capa: - Control Granular: Puedes crear reglas muy espec\u00edficas por aplicaci\u00f3n o servicio. - Independencia: No dependes del tiempo de respuesta del ISP para hacer un cambio de seguridad urgente. - Portabilidad: Si mueves el MiniPC a otra red, las reglas del firewall de Windows se mueven con \u00e9l.</p>"},{"location":"fase1_acceso/firewall-por-capas/#conclusion-estrategica","title":"\ud83e\udde0 Conclusi\u00f3n Estrat\u00e9gica","text":"<p>Nunca conf\u00edes en una sola capa de seguridad. La combinaci\u00f3n del firewall del ISP y el firewall de Windows crea una defensa en profundidad robusta.</p> <ul> <li>El firewall del ISP act\u00faa como un filtro grueso, eliminando la mayor parte del tr\u00e1fico malicioso.</li> <li>El firewall de Windows act\u00faa como un control fino y espec\u00edfico, asegurando que solo las conexiones autorizadas lleguen a los servicios que se ejecutan en el nodo.</li> </ul> <p>Al implementar ambas, construyes una infraestructura significativamente m\u00e1s resiliente y segura, lo que es un argumento de venta clave para tu servicio de gesti\u00f3n profesional.</p>"},{"location":"fase1_acceso/firewall-windows/","title":"\ud83d\udee1\ufe0f Gu\u00eda de Configuraci\u00f3n del Firewall de Windows","text":""},{"location":"fase1_acceso/firewall-windows/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<p>Configurar de forma precisa y segura el Firewall de Windows en cada MiniPC. El objetivo es aplicar el principio de m\u00ednimo privilegio, permitiendo \u00fanicamente el tr\u00e1fico estrictamente necesario (en este caso, el acceso SSH desde la IP del gestor remoto) y bloqueando todo lo dem\u00e1s. Esto reduce dr\u00e1sticamente la superficie de ataque del nodo.</p>"},{"location":"fase1_acceso/firewall-windows/#por-que-es-tan-importante-el-firewall","title":"\ud83e\udd14 \u00bfPor qu\u00e9 es tan importante el Firewall?","text":"<p>Un MiniPC con una IP p\u00fablica en Internet es un blanco visible para escaneos autom\u00e1ticos y ataques de todo el mundo. Estos bots buscan puertos abiertos y vulnerabilidades conocidas. El Firewall de Windows es tu primera l\u00ednea de defensa a nivel de sistema operativo. Si no se configura correctamente, dejas la puerta abierta a accesos no autorizados.</p>"},{"location":"fase1_acceso/firewall-windows/#el-proceso-de-configuracion-en-3-pasos","title":"\ud83d\udcdc El Proceso de Configuraci\u00f3n en 3 Pasos","text":"<p>Realizaremos la configuraci\u00f3n usando PowerShell, ya que es un m\u00e9todo preciso, repetible y automatizable con Ansible.</p>"},{"location":"fase1_acceso/firewall-windows/#paso-1-crear-una-regla-especifica-y-restrictiva","title":"\u2705 Paso 1: Crear una Regla Espec\u00edfica y Restrictiva","text":"<p>En lugar de simplemente abrir el puerto 22 para todo el mundo, crearemos una regla que solo permita el tr\u00e1fico SSH (<code>puerto 22</code>) desde una \u00fanica direcci\u00f3n IP de origen (la tuya en Colombia).</p> <p>Comando de PowerShell (ejecutar como Administrador en el MiniPC):</p> <pre><code># Define la IP p\u00fablica del gestor remoto en una variable\n$remoteIp = \"TU.IP.PUBLICA.COLOMBIA\"\n\n# Crea la regla del firewall\nNew-NetFirewallRule -DisplayName \"Allow SSH Management (Colombia Only)\" `\n  -Name \"AllowSSHManagement\" `\n  -Direction Inbound `\n  -Protocol TCP `\n  -LocalPort 22 `\n  -RemoteAddress $remoteIp `\n  -Action Allow `\n  -Enabled True\n\nWrite-Host \"Regla de firewall 'Allow SSH Management' creada para la IP $remoteIp\"\n</code></pre> <p>An\u00e1lisis del Comando: - <code>-DisplayName</code>: Un nombre descriptivo que ver\u00e1s en la interfaz gr\u00e1fica del firewall. - <code>-Name</code>: Un identificador \u00fanico para la regla. - <code>-Direction Inbound</code>: La regla se aplica al tr\u00e1fico que entra al MiniPC. - <code>-LocalPort 22</code>: Especifica que la regla afecta solo al puerto SSH. - <code>-RemoteAddress $remoteIp</code>: Esta es la parte m\u00e1s importante. Restringe la conexi\u00f3n para que solo se permita si se origina desde esta IP. - <code>-Action Allow</code>: Permite el tr\u00e1fico que cumple las condiciones.</p>"},{"location":"fase1_acceso/firewall-windows/#paso-2-verificar-que-la-regla-general-de-ssh-esta-deshabilitada","title":"\u2705 Paso 2: Verificar que la Regla General de SSH est\u00e1 Deshabilitada","text":"<p>El script <code>enable-ssh.ps1</code> de la Fase 0 cre\u00f3 una regla muy permisiva llamada <code>sshd</code>. Debemos asegurarnos de que est\u00e9 deshabilitada o eliminarla para que nuestra regla m\u00e1s restrictiva sea la \u00fanica que aplique.</p> <p>Comando de Verificaci\u00f3n:</p> <pre><code>Get-NetFirewallRule -Name \"sshd\"\n</code></pre> <p>Si la regla existe y est\u00e1 <code>Enabled: True</code>, deshabil\u00edtala:</p> <pre><code>Set-NetFirewallRule -Name \"sshd\" -Enabled False\nWrite-Host \"Regla de firewall 'sshd' general deshabilitada.\"\n</code></pre> <p>O, para una limpieza total, elim\u00ednala (recomendado):</p> <pre><code>Remove-NetFirewallRule -Name \"sshd\"\nWrite-Host \"Regla de firewall 'sshd' general eliminada.\"\n</code></pre>"},{"location":"fase1_acceso/firewall-windows/#paso-3-validar-la-configuracion-final","title":"\u2705 Paso 3: Validar la Configuraci\u00f3n Final","text":"<p>Para estar seguros de que solo tu regla est\u00e1 activa, puedes listar todas las reglas que afectan al puerto 22.</p> <pre><code>Get-NetFirewallRule | Where-Object { $_.LocalPort -eq 22 -and $_.Enabled -eq $true } | Format-Table Name, DisplayName, RemoteAddress\n</code></pre> <ul> <li>Resultado esperado: Deber\u00edas ver \u00fanicamente tu regla <code>AllowSSHManagement</code>, y en la columna <code>RemoteAddress</code> debe aparecer tu IP de Colombia.</li> </ul>"},{"location":"fase1_acceso/firewall-windows/#gestion-de-ips-dinamicas","title":"\u26a0\ufe0f Gesti\u00f3n de IPs Din\u00e1micas","text":"<p>Si tu IP p\u00fablica en Colombia cambia con frecuencia, la regla del firewall dejar\u00e1 de funcionar y perder\u00e1s el acceso. Tienes varias opciones: 1.  Actualizaci\u00f3n Manual: Conectarte al nodo a trav\u00e9s de otro medio (si lo tienes) o pedirle al operador local que actualice la regla con tu nueva IP. 2.  Usar un Rango de IPs: Si tu ISP te asigna IPs dentro de un rango predecible, puedes especificar el rango en la regla (ej: <code>190.85.48.0/24</code>). 3.  DDNS (DNS Din\u00e1mico): Usar un servicio de DDNS para asociar un nombre de dominio a tu IP cambiante y crear una regla de firewall basada en ese nombre (m\u00e1s complejo). 4.  Implementar una VPN (WireGuard): Esta es la soluci\u00f3n m\u00e1s robusta a largo plazo (discutida en el Roadmap), ya que crea un t\u00fanel seguro y el acceso ya no depender\u00eda de tu IP p\u00fablica.</p>"},{"location":"fase1_acceso/monitoring/","title":"Monitoreo de Conexi\u00f3n","text":"<p>(Contenido pendiente)</p>"},{"location":"fase1_acceso/overlay-vpn/","title":"Overlay VPN (WireGuard/Tailscale)","text":"<p>(Contenido pendiente)</p>"},{"location":"fase1_acceso/port-forwarding/","title":"Forward de Puertos","text":"<p>(Contenido pendiente)</p>"},{"location":"fase1_acceso/ssh-directo/","title":"\ud83d\udd10 Fase 1 \u2013 Acceso Remoto Seguro (SSH sobre IP P\u00fablica)","text":""},{"location":"fase1_acceso/ssh-directo/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<p>Establecer un m\u00e9todo de acceso remoto que sea seguro, estable y profesional, utilizando claves SSH en lugar de contrase\u00f1as. Adem\u00e1s, se busca optimizar el flujo de trabajo del gestor remoto mediante el uso de un archivo de configuraci\u00f3n de SSH local.</p>"},{"location":"fase1_acceso/ssh-directo/#por-que-no-usar-contrasenas","title":"\ud83e\udd14 \u00bfPor qu\u00e9 no usar Contrase\u00f1as?","text":"<p>Aunque la autenticaci\u00f3n con contrase\u00f1a es com\u00fan, es altamente insegura para sistemas expuestos a Internet: - Vulnerables a Fuerza Bruta: Bots automatizados escanean constantemente Internet en busca de puertos SSH abiertos e intentan adivinar contrase\u00f1as comunes (<code>admin</code>, <code>password123</code>, etc.). - Filtraciones: Si esa misma contrase\u00f1a se usa en otro servicio que es hackeado, los atacantes la probar\u00e1n en tus servidores. - Gesti\u00f3n Ineficiente: Recordar y rotar contrase\u00f1as para 250 nodos es una pesadilla operativa.</p> <p>La autenticaci\u00f3n por clave p\u00fablica (SSH Keys) resuelve estos problemas. Es el est\u00e1ndar de la industria.</p>"},{"location":"fase1_acceso/ssh-directo/#keypair","title":"KeyPair)","text":"<p>Funciona con un par de claves criptogr\u00e1ficas: - Clave Privada (<code>id_ed25519</code>): Es tu secreto. Vive en tu m\u00e1quina de gesti\u00f3n (Colombia) y nunca debe ser compartida. Es como la llave f\u00edsica de tu casa. - Clave P\u00fablica (<code>id_ed25519.pub</code>): Es la cerradura. La copias a los servidores remotos que quieres gestionar. Puedes compartirla libremente, no es un secreto.</p> <p>Cuando te conectas, el servidor usa la clave p\u00fablica para verificar la firma digital creada por tu clave privada, probando tu identidad sin necesidad de una contrase\u00f1a.</p>"},{"location":"fase1_acceso/ssh-directo/#paso-1-generar-tu-par-de-claves-ssh-si-no-lo-has-hecho","title":"\u2705 Paso 1: Generar tu Par de Claves SSH (Si no lo has hecho)","text":"<p>En tu m\u00e1quina de gesti\u00f3n en Colombia, abre una terminal y ejecuta:</p> <pre><code># ed25519 es el algoritmo recomendado actualmente: es seguro y r\u00e1pido.\n# -C a\u00f1ade un comentario, usualmente tu email, para identificar la clave.\nssh-keygen -t ed25519 -C \"tu_correo@ejemplo.com\"\n</code></pre> <ul> <li>Acepta la ruta por defecto (<code>~/.ssh/id_ed25519</code>).</li> <li>IMPORTANTE: Se te pedir\u00e1 una passphrase. Es una contrase\u00f1a para proteger tu clave privada. Si alguien robara tu archivo de clave privada, a\u00fan necesitar\u00eda esta passphrase para poder usarla. Se recomienda encarecidamente configurar una.</li> </ul>"},{"location":"fase1_acceso/ssh-directo/#paso-2-copiar-tu-clave-publica-al-nodo-remoto","title":"\u2705 Paso 2: Copiar tu Clave P\u00fablica al Nodo Remoto","text":"<p>Ahora, el operador local debe tomar el contenido de tu clave p\u00fablica (<code>~/.ssh/id_ed25519.pub</code>) y a\u00f1adirlo a un archivo espec\u00edfico en el MiniPC.</p> <p>En el MiniPC (ejecutado por el operador local):</p> <pre><code># Crear la carpeta .ssh si no existe\nNew-Item -Path \"C:\\Users\\admin\\.ssh\" -ItemType Directory -Force\n\n# Crear el archivo authorized_keys y pegar el contenido de la clave p\u00fablica\n# Reemplazar \"CONTENIDO_DE_LA_CLAVE_PUBLICA\" con tu clave real (ssh-ed25519 AAAA...)\n\"CONTENIDO_DE_LA_CLAVE_PUBLICA\" | Out-File -FilePath \"C:\\Users\\admin\\.ssh\\authorized_keys\" -Encoding utf8 -Append\n</code></pre>"},{"location":"fase1_acceso/ssh-directo/#paso-3-optimizar-tu-flujo-de-trabajo-con-sshconfig","title":"\u2705 Paso 3: Optimizar tu Flujo de Trabajo con <code>~/.ssh/config</code>","text":"<p>Para evitar escribir <code>ssh -i ~/.ssh/id_ed25519 admin@50.190.105.81</code> cada vez, puedes crear alias en un archivo de configuraci\u00f3n.</p> <p>En tu m\u00e1quina de gesti\u00f3n, edita o crea el archivo <code>~/.ssh/config</code> y a\u00f1ade una entrada por cada nodo:</p> <pre><code># =====================================\n# Cliente A - Nodos en Miami\n# =====================================\nHost nodo-a-01\n  HostName 50.190.105.81\n  User admin\n  IdentityFile ~/.ssh/id_ed25519\n\nHost nodo-a-02\n  HostName 50.190.105.82\n  User admin\n  IdentityFile ~/.ssh/id_ed25519\n\n# ... y as\u00ed sucesivamente para los 10 nodos\n</code></pre> <p>Ahora, para conectarte al primer nodo, todo lo que necesitas escribir es:</p> <pre><code>ssh nodo-a-01\n</code></pre>"},{"location":"fase1_acceso/ssh-directo/#siguiente-nivel-de-seguridad-ip-allowlist","title":"\ud83d\udee1\ufe0f Siguiente Nivel de Seguridad: IP Allowlist","text":"<p>Incluso con claves SSH, es una buena pr\u00e1ctica restringir desde qu\u00e9 IPs se puede intentar una conexi\u00f3n. Esto se hace en el firewall del nodo.</p> <p>Desde el MiniPC, ejecuta este comando PowerShell (como Admin):</p> <pre><code># Permitir conexiones al puerto 22 solo desde una IP espec\u00edfica (la tuya en Colombia)\n# Reemplaza \"TU.IP.PUBLICA.COLOMBIA\" con tu IP p\u00fablica actual.\nNew-NetFirewallRule -DisplayName \"Allow SSH Colombia Only\" `\n  -Direction Inbound -Protocol TCP -LocalPort 22 `\n  -RemoteAddress \"TU.IP.PUBLICA.COLOMBIA\" `\n  -Action Allow\n</code></pre> <p>Nota sobre IP Din\u00e1mica: Si tu IP en Colombia cambia, deber\u00e1s actualizar esta regla. En fases futuras, una VPN (WireGuard) puede ser una soluci\u00f3n m\u00e1s robusta para este problema.</p>"},{"location":"fase1_acceso/validaciones/","title":"\u2705 Validaciones de Conectividad Remota desde Colombia","text":""},{"location":"fase1_acceso/validaciones/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<p>Verificar que el MiniPC remoto con IP p\u00fablica fija est\u00e1 completamente accesible y seguro para gesti\u00f3n remota, sin afectar su funcionamiento normal.</p>"},{"location":"fase1_acceso/validaciones/#desde-donde-estas-trabajando","title":"\ud83e\udded \u00bfDesde d\u00f3nde est\u00e1s trabajando?","text":"<p>Desde Colombia, usando:</p> <ul> <li>Una conexi\u00f3n residencial</li> <li>IP p\u00fablica din\u00e1mica (usualmente)</li> <li>Acceso SSH desde terminal local</li> </ul>"},{"location":"fase1_acceso/validaciones/#1-verificar-conectividad-con-ping","title":"1\ufe0f\u20e3 Verificar conectividad con <code>ping</code>","text":"<pre><code>ping 50.190.105.81\n</code></pre> <p>\u2705 Debes recibir respuesta de <code>50.190.105.81</code> con tiempos de latencia (~80\u2013120ms)</p>"},{"location":"fase1_acceso/validaciones/#2-probar-acceso-por-puerto-22-ssh","title":"2\ufe0f\u20e3 Probar acceso por puerto 22 (SSH)","text":"<pre><code>nc -zv 50.190.105.81 22\n</code></pre> <p>\u2705 Debes recibir: <code>Connection to 50.190.105.81 port 22 [tcp/ssh] succeeded!</code></p> <p>Si no, revisar:</p> <ul> <li> <p>Firewall Windows</p> </li> <li> <p>IP allowlist</p> </li> <li> <p>Puerto 22 habilitado</p> </li> </ul>"},{"location":"fase1_acceso/validaciones/#3-iniciar-sesion-ssh-con-clave","title":"3\ufe0f\u20e3 Iniciar sesi\u00f3n SSH con clave","text":"<pre><code>ssh admin@50.190.105.81\n</code></pre> <p>Si usas clave privada:</p> <pre><code>ssh -i ~/.ssh/id_ed25519 admin@50.190.105.81\n</code></pre>"},{"location":"fase1_acceso/validaciones/#4-confirmar-sistema-remoto-comandos-de-diagnostico","title":"4\ufe0f\u20e3 Confirmar sistema remoto (comandos de diagn\u00f3stico)","text":"<p>Una vez dentro del MiniPC:</p> <pre><code>ipconfig\n</code></pre> <p>Verifica que est\u00e1s usando la IP fija asignada (<code>50.190.105.81</code>) Revisa que el gateway y DNS est\u00e9n bien configurados.</p>"},{"location":"fase1_acceso/validaciones/#5-probar-conexion-saliente-desde-el-minipc","title":"5\ufe0f\u20e3 Probar conexi\u00f3n saliente desde el MiniPC","text":"<p>Esto asegura que las apps monetizadas seguir\u00e1n funcionando:</p> <pre><code>ping 8.8.8.8\ncurl ifconfig.me\n</code></pre>"},{"location":"fase2_ipam_netbox/instalacion/","title":"\ud83c\udf10 Fase 2 \u2013 Instalaci\u00f3n de NetBox con Docker","text":""},{"location":"fase2_ipam_netbox/instalacion/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<p>Instalar y configurar NetBox, la herramienta que servir\u00e1 como la \u00danica Fuente de Verdad (Single Source of Truth - SSoT) para toda tu infraestructura. Utilizaremos Docker y Docker Compose para un despliegue r\u00e1pido, aislado y mantenible.</p>"},{"location":"fase2_ipam_netbox/instalacion/#que-es-netbox-y-por-que-es-indispensable","title":"\ud83e\udd14 \u00bfQu\u00e9 es NetBox y por qu\u00e9 es indispensable?","text":"<p>NetBox es una aplicaci\u00f3n de modelado de infraestructura. Piensa en ella como una base de datos superpoderosa dise\u00f1ada espec\u00edficamente para redes. Te permite documentar y gestionar los activos m\u00e1s importantes de tu operaci\u00f3n:</p> <ul> <li>IPAM (Gesti\u00f3n de Direcciones IP): Control total sobre tus prefijos (<code>50.190.105.80/28</code>), IPs individuales, VLANs, etc. Sabr\u00e1s qu\u00e9 IP est\u00e1 asignada, a qu\u00e9 dispositivo y para qu\u00e9 cliente, en todo momento.</li> <li>DCIM (Gesti\u00f3n de Infraestructura de Centro de Datos): Aunque no uses un data center tradicional, puedes modelar tus Sitios (ej: <code>USA-MIA-01</code>), Fabricantes (<code>Beelink</code>), Tipos de Dispositivos (<code>MiniPC E2</code>), y cada Dispositivo individualmente.</li> </ul> <p>Beneficios Clave para tu Negocio: - Elimina el Caos: Reemplaza hojas de c\u00e1lculo fr\u00e1giles y propensas a errores. NetBox impone una estructura. - Profesionalismo: Demuestra a tus clientes que utilizas herramientas est\u00e1ndar de la industria para gestionar su infraestructura. - Habilita la Automatizaci\u00f3n: Este es el beneficio m\u00e1s importante. Tu herramienta de automatizaci\u00f3n (Ansible) consultar\u00e1 la API de NetBox para saber qu\u00e9 dispositivos existen y c\u00f3mo debe configurarlos. Sin NetBox, la automatizaci\u00f3n a escala es imposible.</p>"},{"location":"fase2_ipam_netbox/instalacion/#por-que-usar-docker-para-la-instalacion","title":"\ud83d\udc33 \u00bfPor qu\u00e9 usar Docker para la Instalaci\u00f3n?","text":"<p>Podr\u00edas instalar NetBox y sus dependencias (PostgreSQL, Redis, etc.) directamente en el sistema operativo, pero esto es fr\u00e1gil y dif\u00edcil de mantener. Docker nos permite empaquetar cada servicio en su propio contenedor aislado.</p> <ul> <li>Aislamiento: Las dependencias de NetBox no entrar\u00e1n en conflicto con otro software que instales en el servidor.</li> <li>Portabilidad: Puedes mover tu instalaci\u00f3n de NetBox a otro servidor simplemente moviendo los archivos de configuraci\u00f3n de Docker y los vol\u00famenes de datos.</li> <li>Facilidad de Actualizaci\u00f3n: Actualizar NetBox a una nueva versi\u00f3n es tan simple como cambiar la etiqueta de la imagen en el archivo de configuraci\u00f3n y reiniciar los contenedores.</li> </ul>"},{"location":"fase2_ipam_netbox/instalacion/#guia-de-instalacion-paso-a-paso","title":"\ud83d\udee0\ufe0f Gu\u00eda de Instalaci\u00f3n Paso a Paso","text":"<p>Estos pasos se deben ejecutar en tu servidor de gesti\u00f3n (un VPS con Ubuntu 22.04 es ideal).</p>"},{"location":"fase2_ipam_netbox/instalacion/#1-preparar-el-servidor","title":"1. Preparar el Servidor","text":"<p>Con\u00e9ctate a tu servidor Ubuntu por SSH y aseg\u00farate de que todo est\u00e9 actualizado:</p> <pre><code>sudo apt update &amp;&amp; sudo apt upgrade -y\n</code></pre> <p>Instala Git, Docker y Docker Compose:</p> <pre><code>sudo apt install -y git docker.io docker-compose\n</code></pre>"},{"location":"fase2_ipam_netbox/instalacion/#2-descargar-la-configuracion-de-netbox-docker","title":"2. Descargar la Configuraci\u00f3n de NetBox Docker","text":"<p>El equipo de NetBox mantiene un repositorio de GitHub con toda la configuraci\u00f3n de Docker lista para usar.</p> <pre><code># Clona el repositorio en el directorio /opt, un buen lugar para software de terceros\nsudo git clone -b release https://github.com/netbox-community/netbox-docker.git /opt/netbox-docker\ncd /opt/netbox-docker\n</code></pre>"},{"location":"fase2_ipam_netbox/instalacion/#3-configurar-el-entorno-de-netbox","title":"3. Configurar el Entorno de NetBox","text":"<p>Copia el archivo de configuraci\u00f3n de ejemplo y luego genera una clave secreta, que NetBox usa para la seguridad interna de la aplicaci\u00f3n.</p> <pre><code># Copia el archivo de variables de entorno\nsudo cp env/netbox.env-example env/netbox.env\n\n# Genera una clave secreta y gu\u00e1rdala\nSECRET_KEY=$(python3 contrib/generate-secret-key.py)\n\n# A\u00f1ade la clave al final del archivo de configuraci\u00f3n\necho \"SECRET_KEY=$SECRET_KEY\" | sudo tee -a env/netbox.env\n</code></pre>"},{"location":"fase2_ipam_netbox/instalacion/#4-iniciar-netbox","title":"4. Iniciar NetBox","text":"<p>Con la configuraci\u00f3n lista, levanta toda la pila de servicios con un solo comando:</p> <pre><code>sudo docker-compose up -d\n</code></pre> <ul> <li><code>up</code>: Crea e inicia los contenedores.</li> <li><code>-d</code> (detach): Ejecuta los contenedores en segundo plano.</li> </ul> <p>La primera vez, Docker descargar\u00e1 todas las im\u00e1genes necesarias (NetBox, PostgreSQL, Redis), lo que puede tardar unos minutos.</p>"},{"location":"fase2_ipam_netbox/instalacion/#5-acceder-y-proteger-tu-instancia-de-netbox","title":"5. Acceder y Proteger tu Instancia de NetBox","text":"<p>Una vez que el comando anterior termine, NetBox estar\u00e1 accesible.</p> <ol> <li>Accede a la Interfaz Web: Abre tu navegador y ve a <code>http://&lt;IP_DE_TU_SERVIDOR_NETBOX&gt;</code>.<ul> <li>Nota: La configuraci\u00f3n por defecto ahora usa el puerto 80, no el 8000.</li> </ul> </li> <li>Primer Inicio de Sesi\u00f3n:<ul> <li>Usuario: <code>admin</code></li> <li>Contrase\u00f1a: <code>admin</code></li> </ul> </li> <li>CAMBIA LA CONTRASE\u00d1A INMEDIATAMENTE:<ul> <li>Ve a Admin &gt; Users &gt; admin.</li> <li>Haz clic en el bot\u00f3n \"Change Password\" y establece una contrase\u00f1a fuerte y \u00fanica.</li> </ul> </li> </ol>"},{"location":"fase2_ipam_netbox/instalacion/#checklist-de-validacion","title":"\u2705 Checklist de Validaci\u00f3n","text":"<ul> <li>[ ] El servidor de gesti\u00f3n est\u00e1 actualizado y tiene Docker y Docker Compose instalados.</li> <li>[ ] El repositorio <code>netbox-docker</code> est\u00e1 clonado en <code>/opt/netbox-docker</code>.</li> <li>[ ] El archivo <code>env/netbox.env</code> existe y contiene una <code>SECRET_KEY</code>.</li> <li>[ ] El comando <code>sudo docker-compose ps</code> muestra todos los contenedores de NetBox en estado <code>Up</code> o <code>running</code>.</li> <li>[ ] Puedes acceder a la interfaz web de NetBox desde tu navegador.</li> <li>[ ] Has iniciado sesi\u00f3n y has cambiado la contrase\u00f1a por defecto del usuario <code>admin</code>.</li> </ul>"},{"location":"fase2_ipam_netbox/modelado/","title":"\ud83e\uddf1 Fase 2 \u2013 Modelado de la Infraestructura en NetBox","text":""},{"location":"fase2_ipam_netbox/modelado/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<p>Crear el modelo de datos fundamental dentro de NetBox que representar\u00e1 fielmente tu infraestructura f\u00edsica y l\u00f3gica. Este es un paso de dise\u00f1o cr\u00edtico: un buen modelo hace que la gesti\u00f3n y la automatizaci\u00f3n sean intuitivas; un mal modelo crea confusi\u00f3n y deuda t\u00e9cnica.</p>"},{"location":"fase2_ipam_netbox/modelado/#que-es-el-modelado-de-datos","title":"\ud83e\udd14 \u00bfQu\u00e9 es el Modelado de Datos?","text":"<p>Modelar es el proceso de crear las plantillas y categor\u00edas antes de registrar los activos individuales. Es como dise\u00f1ar los estantes y las etiquetas de un almac\u00e9n antes de empezar a meter la mercanc\u00eda. Si lo haces bien, encontrar\u00e1s todo f\u00e1cilmente.</p> <p>En NetBox, nos enfocaremos en los siguientes modelos clave:</p> <ul> <li>Organizaci\u00f3n: \u00bfQui\u00e9n es el fabricante? \u00bfD\u00f3nde est\u00e1 ubicado el equipo?</li> <li>Dispositivos: \u00bfQu\u00e9 tipo de hardware es? \u00bfQu\u00e9 funci\u00f3n cumple en la red?</li> <li>IPAM: \u00bfA qu\u00e9 bloque de IPs pertenece esta direcci\u00f3n?</li> </ul>"},{"location":"fase2_ipam_netbox/modelado/#guia-de-modelado-paso-a-paso","title":"\ud83d\udee0\ufe0f Gu\u00eda de Modelado Paso a Paso","text":"<p>Estos pasos se realizan en la interfaz web de NetBox.</p>"},{"location":"fase2_ipam_netbox/modelado/#paso-1-modelar-el-mundo-fisico-organization","title":"\u2705 Paso 1: Modelar el Mundo F\u00edsico (Organization)","text":"<p>Primero, definimos el \"qui\u00e9n\" y el \"d\u00f3nde\".</p> <ol> <li> <p>Crear el Fabricante (Manufacturer): Esto agrupa los dispositivos por su marca.</p> <ul> <li>Ruta: <code>Organization &gt; Manufacturers &gt; + Add</code></li> <li>Name: <code>Beelink</code></li> <li>Descripci\u00f3n: <code>Fabricante de MiniPCs para nodos cliente.</code></li> </ul> </li> <li> <p>Crear el Sitio (Site): Un sitio es una ubicaci\u00f3n geogr\u00e1fica \u00fanica.</p> <ul> <li>Ruta: <code>Organization &gt; Sites &gt; + Add</code></li> <li>Name: <code>USA-MIA-01</code> (Un c\u00f3digo nemot\u00e9cnico: Pa\u00eds-Ciudad-N\u00fameroDeSitio)</li> <li>Status: <code>Active</code></li> <li>Time Zone: <code>America/New_York</code></li> <li>Descripci\u00f3n: <code>Ubicaci\u00f3n principal para los nodos del Cliente A en Miami.</code></li> </ul> </li> </ol>"},{"location":"fase2_ipam_netbox/modelado/#paso-2-modelar-las-plantillas-de-dispositivos-devices","title":"\u2705 Paso 2: Modelar las Plantillas de Dispositivos (Devices)","text":"<p>Ahora, definimos el \"qu\u00e9\" y el \"porqu\u00e9\".</p> <ol> <li> <p>Crear el Rol del Dispositivo (Device Role): Define la funci\u00f3n l\u00f3gica de un equipo.</p> <ul> <li>Ruta: <code>Devices &gt; Device Roles &gt; + Add</code></li> <li>Name: <code>Nodo Cliente</code></li> <li>Color: <code>Green</code> (Elige colores para identificar roles de un vistazo)</li> <li>Descripci\u00f3n: <code>Un MiniPC gestionado que ejecuta cargas de trabajo para un cliente.</code></li> <li>Crea tambi\u00e9n un rol llamado <code>Servidor de Gesti\u00f3n</code> (color <code>Blue</code>) para tus propios servidores. </li> </ul> </li> <li> <p>Crear el Tipo de Dispositivo (Device Type): Esta es la plantilla de hardware.</p> <ul> <li>Ruta: <code>Devices &gt; Device Types &gt; + Add</code></li> <li>Manufacturer: <code>Beelink</code></li> <li>Model: <code>MiniPC E2</code></li> <li>Height (U): <code>1</code> (Aunque no van en un rack, es una buena pr\u00e1ctica)</li> <li>Descripci\u00f3n: <code>Modelo est\u00e1ndar de MiniPC para los nodos cliente.</code></li> <li>Consejo: Puedes a\u00f1adir aqu\u00ed las interfaces de red (<code>eth0</code>, etc.) para que cada nuevo dispositivo de este tipo se cree ya con sus interfaces listas. </li> </ul> </li> </ol>"},{"location":"fase2_ipam_netbox/modelado/#paso-3-modelar-el-espacio-de-red-ipam","title":"\u2705 Paso 3: Modelar el Espacio de Red (IPAM)","text":"<p>Finalmente, definimos el \"d\u00f3nde\" en la red.</p> <ol> <li>Crear el Prefijo (Prefix): Un prefijo es un bloque de direcciones IP.<ul> <li>Ruta: <code>IPAM &gt; Prefixes &gt; + Add</code></li> <li>Prefix: <code>50.190.105.80/28</code></li> <li>Status: <code>Active</code></li> <li>Site: <code>USA-MIA-01</code></li> <li>Description: <code>Bloque de IPs p\u00fablicas fijas de Comcast para nodos cliente en Miami.</code></li> </ul> </li> </ol>"},{"location":"fase2_ipam_netbox/modelado/#registro-de-tu-primer-dispositivo-real","title":"\ud83d\ude80 Registro de tu Primer Dispositivo Real","text":"<p>Con el modelo ya creado, registrar un nuevo dispositivo es un proceso de \"rellenar los huecos\" de las plantillas que has dise\u00f1ado.</p> <ol> <li> <p>Crear el Dispositivo:</p> <ul> <li>Ruta: <code>Devices &gt; Devices &gt; + Add</code></li> <li>Name: <code>cliente-a-nodo-01</code> (Un nombre de host descriptivo)</li> <li>Device Role: <code>Nodo Cliente</code></li> <li>Device Type: <code>MiniPC E2</code></li> <li>Site: <code>USA-MIA-01</code></li> <li>Status: <code>Active</code></li> </ul> </li> <li> <p>Crear y Asignar la Interfaz de Red:</p> <ul> <li>Dentro de la p\u00e1gina del nuevo dispositivo, ve a la pesta\u00f1a Interfaces y haz clic en + Add.</li> <li>Name: <code>eth0</code></li> <li>Type: <code>1000BASE-T (1GE)</code></li> </ul> </li> <li> <p>Asignar la Direcci\u00f3n IP:</p> <ul> <li>En la misma p\u00e1gina de la interfaz, busca la secci\u00f3n IP Addresses y haz clic en + Assign IP Address.</li> <li>Address: <code>50.190.105.81/28</code> (Escribe la IP y el prefijo).</li> <li>Marca la casilla \"Make this the primary IP for the device\".</li> </ul> </li> </ol>"},{"location":"fase2_ipam_netbox/modelado/#checklist-de-validacion","title":"\u2705 Checklist de Validaci\u00f3n","text":"<ul> <li>[ ] El modelo de datos refleja la realidad de tu infraestructura (Fabricantes, Sitios, Roles, Tipos).</li> <li>[ ] El prefijo IP est\u00e1 correctamente definido y asociado a un sitio.</li> <li>[ ] Has registrado tu primer dispositivo f\u00edsico, asoci\u00e1ndolo a los modelos creados.</li> <li>[ ] La IP primaria del dispositivo est\u00e1 correctamente asignada a su interfaz de red.</li> <li>[ ] La estructura se siente l\u00f3gica y escalable. Puedes imaginar c\u00f3mo registrar\u00edas 100 dispositivos m\u00e1s usando este modelo.</li> </ul>"},{"location":"fase2_ipam_netbox/scripts/","title":"\u2699\ufe0f Fase 2 \u2013 Automatizaci\u00f3n del Registro de Nodos con la API de NetBox","text":""},{"location":"fase2_ipam_netbox/scripts/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<p>Pasar del registro manual de dispositivos a un proceso de registro automatizado utilizando un script de Python que interact\u00faa con la API de NetBox. Esto es fundamental para escalar la operaci\u00f3n y asegurar la consistencia de los datos.</p>"},{"location":"fase2_ipam_netbox/scripts/#por-que-usar-la-api","title":"\ud83e\udd14 \u00bfPor qu\u00e9 usar la API?","text":"<p>La interfaz web de NetBox es excelente para visualizar datos y hacer cambios puntuales, pero es completamente ineficiente para tareas masivas. Si necesitas registrar 10, 50 o 250 nodos, el registro manual es: - Lento y Tedioso: Horas de trabajo repetitivo. - Propenso a Errores: Un simple error de tipeo puede causar problemas de configuraci\u00f3n m\u00e1s adelante. - No Escalable: Es el cuello de botella que te impedir\u00e1 crecer.</p> <p>La API (Interfaz de Programaci\u00f3n de Aplicaciones) de NetBox expone toda su funcionalidad a programas externos. Al usarla, podemos decirle a NetBox qu\u00e9 hacer mediante c\u00f3digo, lo que nos permite automatizar cualquier tarea.</p>"},{"location":"fase2_ipam_netbox/scripts/#pynetbox-tu-puente-entre-python-y-netbox","title":"\ud83d\udc0d <code>pynetbox</code>: Tu Puente entre Python y NetBox","text":"<p>Para facilitar la interacci\u00f3n con la API, usaremos <code>pynetbox</code>, una librer\u00eda de Python que traduce funciones de Python sencillas en las complejas llamadas a la API que NetBox entiende.</p>"},{"location":"fase2_ipam_netbox/scripts/#paso-1-preparar-el-entorno","title":"\u2705 Paso 1: Preparar el Entorno","text":"<ol> <li> <p>Instalar <code>pynetbox</code>: En tu m\u00e1quina de gesti\u00f3n, ejecuta:     <code>bash     pip install pynetbox</code></p> </li> <li> <p>Generar un Token de API en NetBox: El token es una contrase\u00f1a para que tu script se autentique.</p> <ul> <li>En NetBox, ve a tu perfil de usuario (arriba a la derecha) &gt; API Tokens.</li> <li>Haz clic en + Add a token.</li> <li>IMPORTANTE: Marca la casilla \"Write Enabled\". Sin esto, el token solo podr\u00e1 leer datos, no crearlos.</li> <li>Copia la clave del token y gu\u00e1rdala en tu gestor de contrase\u00f1as. No la volver\u00e1s a ver.</li> </ul> </li> </ol>"},{"location":"fase2_ipam_netbox/scripts/#script-de-registro-masivo","title":"\ud83d\udcdc Script de Registro Masivo","text":"<p>Este script registrar\u00e1 los 9 nodos restantes del <code>cliente-a</code> (del 2 al 10). Est\u00e1 dise\u00f1ado para ser f\u00e1cilmente adaptable a otros clientes y rangos de IPs.</p> <p>Crea un archivo llamado <code>registrar_nodos.py</code>:</p> <pre><code>import pynetbox\nimport os\n\n# --- Configuraci\u00f3n Segura ---\n# Lee las credenciales desde variables de entorno para no exponerlas en el c\u00f3digo.\n# En tu terminal, ejecuta:\n# export NETBOX_URL='http://&lt;IP_DE_TU_SERVIDOR_NETBOX&gt;'\n# export NETBOX_TOKEN='TU_TOKEN_DE_API_AQUI'\n\nNETBOX_URL = os.getenv('NETBOX_URL')\nNETBOX_TOKEN = os.getenv('NETBOX_TOKEN')\n\nif not all([NETBOX_URL, NETBOX_TOKEN]):\n    print(\"Error: Aseg\u00farate de haber definido las variables de entorno NETBOX_URL y NETBOX_TOKEN.\")\n    exit()\n\n# --- Constantes del Modelo de Datos ---\n# Cambia estos valores para registrar nodos para un cliente diferente.\nCLIENTE_TAG = 'cliente-a'\nSITIO_SLUG = 'usa-mia-01'\nDEVICE_ROLE_SLUG = 'nodo-cliente'\nDEVICE_TYPE_SLUG = 'minipc-e2'\nINTERFACE_NAME = 'eth0'\nIP_RANGE_START = 2  # El n\u00famero del primer nodo a registrar\nIP_RANGE_END = 10   # El n\u00famero del \u00faltimo nodo a registrar\nIP_BASE = \"50.190.105.\"\n\n# --- Script Principal ---\ndef main():\n    # Inicializar API\n    nb = pynetbox.api(url=NETBOX_URL, token=NETBOX_TOKEN)\n\n    # Obtener objetos base de NetBox usando sus \"slugs\" (identificadores para URL)\n    try:\n        site_obj = nb.dcim.sites.get(slug=SITIO_SLUG)\n        role_obj = nb.dcim.device_roles.get(slug=DEVICE_ROLE_SLUG)\n        type_obj = nb.dcim.device_types.get(slug=DEVICE_TYPE_SLUG)\n        tag_obj = nb.extras.tags.get(slug=CLIENTE_TAG)\n        print(\"\u2705 Objetos base de NetBox obtenidos correctamente.\")\n    except Exception as e:\n        print(f\"\u274c Error al obtener objetos base de NetBox: {e}\")\n        return\n\n    # Bucle para crear los nodos\n    for i in range(IP_RANGE_START, IP_RANGE_END + 1):\n        device_name = f'{CLIENTE_TAG}-nodo-{i:02d}'\n        ip_address = f'{IP_BASE}{80 + i}/28'\n\n        print(f\"\\n--- Procesando: {device_name} --- \")\n\n        # Verificar si el dispositivo ya existe\n        if nb.dcim.devices.get(name=device_name):\n            print(f\"\ud83d\udfe1 El dispositivo '{device_name}' ya existe. Se omite.\")\n            continue\n\n        # Crear el dispositivo\n        try:\n            new_device = nb.dcim.devices.create(\n                name=device_name,\n                device_role=role_obj.id,\n                device_type=type_obj.id,\n                site=site_obj.id,\n                status='active',\n                tags=[tag_obj.id]\n            )\n            print(f\"  -&gt; \u2714\ufe0f Dispositivo '{new_device.name}' creado.\")\n\n            # Crear la interfaz y asignar la IP\n            interface = nb.dcim.interfaces.create(device=new_device.id, name=INTERFACE_NAME, type='1000base-t')\n            ip = nb.ipam.ip_addresses.create(address=ip_address, status='active', assigned_object_type='dcim.interface', assigned_object_id=interface.id)\n            new_device.primary_ip4 = ip.id\n            new_device.save()\n            print(f\"  -&gt; \u2714\ufe0f IP {ip.address} asignada a la interfaz {interface.name} y establecida como primaria.\")\n\n        except pynetbox.RequestError as e:\n            print(f\"  -&gt; \u274c ERROR al crear {device_name}: {e.error}\")\n            continue\n\n    print(\"\\n\ud83c\udf89 Proceso de registro completado.\")\n\nif __name__ == \"__main__\":\n    main()\n\n</code></pre>"},{"location":"fase2_ipam_netbox/scripts/#ejecucion-del-script","title":"Ejecuci\u00f3n del Script","text":"<ol> <li>Exporta las variables de entorno en tu terminal para mantener tus credenciales seguras.</li> <li>Ejecuta el script: <code>python registrar_nodos.py</code>.</li> <li>Observa la salida y luego verifica en la interfaz de NetBox que los nuevos dispositivos han sido creados, etiquetados y tienen sus IPs asignadas.</li> </ol>"},{"location":"fase2_ipam_netbox/scripts/#checklist-de-validacion","title":"\u2705 Checklist de Validaci\u00f3n","text":"<ul> <li>[ ] La librer\u00eda <code>pynetbox</code> est\u00e1 instalada.</li> <li>[ ] Se ha generado un token de API con permisos de escritura.</li> <li>[ ] Las variables de entorno <code>NETBOX_URL</code> y <code>NETBOX_TOKEN</code> est\u00e1n configuradas.</li> <li>[ ] El script se ejecuta sin errores de conexi\u00f3n o de l\u00f3gica.</li> <li>[ ] Los 9 nodos nuevos aparecen en NetBox, cada uno con su nombre, IP, rol, tipo, sitio y tag correctos.</li> <li>[ ] Al volver a ejecutar el script, este omite los dispositivos que ya existen en lugar de dar un error.</li> </ul>"},{"location":"fase3_automatizacion/intro/","title":"\u2699\ufe0f Fase 3 \u2013 Introducci\u00f3n a la Automatizaci\u00f3n con Ansible","text":""},{"location":"fase3_automatizacion/intro/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<p>Comprender los conceptos fundamentales de Ansible y su rol como la principal herramienta de gesti\u00f3n de configuraci\u00f3n y orquestaci\u00f3n del proyecto. Esta fase marca el cambio de una gesti\u00f3n manual (nodo por nodo) a una infraestructura como c\u00f3digo (IaC), donde el estado deseado de tus servidores se define en archivos de texto.</p>"},{"location":"fase3_automatizacion/intro/#que-es-ansible-y-por-que-es-la-eleccion-correcta","title":"\ud83e\udd14 \u00bfQu\u00e9 es Ansible y por qu\u00e9 es la elecci\u00f3n correcta?","text":"<p>Ansible es un motor de automatizaci\u00f3n que se conecta a tus nodos remotos (v\u00eda SSH) y ejecuta tareas. Piensa en \u00e9l como un \"director de orquesta\" para tus servidores. En lugar de darle instrucciones a cada m\u00fasico (servidor) individualmente, le entregas al director (Ansible) una partitura (un Playbook), y \u00e9l se encarga de que toda la orquesta toque en armon\u00eda.</p> <p>Ventajas Clave para tu Proyecto:</p> <ol> <li> <p>Sin Agentes (Agentless): Esta es su mayor ventaja. No necesitas instalar y mantener un software \"agente\" en cada MiniPC. Ansible se comunica usando el protocolo SSH, que ya hemos configurado y asegurado. Esto significa menos consumo de recursos en los nodos y una barrera de entrada m\u00e1s baja.</p> </li> <li> <p>Lenguaje Simple y Declarativo (YAML): Las \"partituras\" de Ansible, llamadas Playbooks, se escriben en YAML. YAML es un lenguaje de serializaci\u00f3n de datos legible por humanos. No describes los pasos para llegar a un estado, sino que declaras el estado final que deseas. Por ejemplo, en lugar de decir \"ejecuta el comando para instalar Chrome\", dices \"el paquete Chrome debe estar presente\".</p> </li> <li> <p>Idempotencia Garantizada: Esta es una propiedad fundamental. Un playbook idempotente puede ejecutarse m\u00faltiples veces, pero solo realizar\u00e1 cambios la primera vez. En las ejecuciones posteriores, detectar\u00e1 que el nodo ya est\u00e1 en el estado deseado y no har\u00e1 nada. Esto hace que la automatizaci\u00f3n sea segura y predecible.</p> </li> <li> <p>Extensible y Conectado: Ansible tiene un ecosistema masivo de m\u00f3dulos (peque\u00f1os plugins para tareas espec\u00edficas) y colecciones (paquetes de m\u00f3dulos, como el que usaremos para NetBox). Esto te permite gestionar todo, desde un servicio de Windows hasta un balanceador de carga en la nube.</p> </li> </ol>"},{"location":"fase3_automatizacion/intro/#la-arquitectura-de-ansible","title":"\ud83e\uddf1 La Arquitectura de Ansible","text":"<ul> <li> <p>Nodo de Control (Control Node): La m\u00e1quina donde instalas y ejecutas Ansible. En tu caso, tu ordenador de gesti\u00f3n en Colombia. Es el \u00fanico lugar donde necesitas instalar Ansible.</p> </li> <li> <p>Nodos Gestionados (Managed Nodes): Los servidores que Ansible configura. En tu caso, los 250 MiniPCs en EE.UU. Solo necesitan tener Python (en Linux) o PowerShell (en Windows) y un acceso SSH.</p> </li> <li> <p>Inventario (Inventory): El coraz\u00f3n de Ansible. Es una lista de los nodos gestionados. Puede ser un archivo de texto simple (<code>.ini</code> o <code>.yml</code>) o, como haremos nosotros, un inventario din\u00e1mico que consulta a NetBox en tiempo real para obtener la lista de hosts. Este es el puente entre tu fuente de verdad y tu motor de automatizaci\u00f3n.</p> </li> <li> <p>Playbooks: Archivos YAML que definen un conjunto ordenado de Tareas (Tasks) a ejecutar sobre un grupo de hosts del inventario. Cada tarea es una llamada a un m\u00f3dulo de Ansible.</p> </li> </ul>"},{"location":"fase3_automatizacion/intro/#workflow","title":"workflow","text":"<ol> <li>Definir el Inventario: Le dices a Ansible \"estos son los servidores con los que vamos a trabajar\" (conect\u00e1ndolo a NetBox).</li> <li>Escribir un Playbook: Creas un archivo YAML declarando el estado deseado (ej: \"el usuario 'backup' debe existir\", \"el paquete 'nginx' debe estar instalado\", \"el servicio 'sshd' debe estar corriendo\").</li> <li>Ejecutar el Playbook: Desde tu nodo de control, ejecutas <code>ansible-playbook mi_playbook.yml</code>.</li> <li>Ansible Act\u00faa:<ul> <li>Lee el inventario para obtener la lista de IPs.</li> <li>Se conecta a cada nodo v\u00eda SSH.</li> <li>Ejecuta cada tarea del playbook en orden.</li> <li>Verifica si el estado deseado ya se cumple (idempotencia).</li> <li>Realiza los cambios solo si es necesario.</li> </ul> </li> <li>Recibir el Informe: Ansible te devuelve un resumen detallado de qu\u00e9 nodos fueron modificados, cu\u00e1les ya estaban en el estado correcto y si hubo alg\u00fan error.</li> </ol>"},{"location":"fase3_automatizacion/intro/#proximo-paso","title":"\ud83d\udccc Pr\u00f3ximo Paso","text":"<p>Ahora que entiendes la teor\u00eda, el siguiente paso es instalar Ansible, configurar la conexi\u00f3n a tus nodos Windows y ejecutar tu primer playbook para ver la magia en acci\u00f3n.</p>"},{"location":"fase3_automatizacion/inventario_dinamico/","title":"\u2699\ufe0f Fase 3 \u2013 Inventario Din\u00e1mico desde NetBox","text":""},{"location":"fase3_automatizacion/inventario_dinamico/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<p>Evolucionar de un inventario est\u00e1tico (un archivo de texto que debes mantener a mano) a un inventario din\u00e1mico. Esta configuraci\u00f3n le permite a Ansible consultar a NetBox, nuestra fuente \u00fanica de verdad, en tiempo real cada vez que se ejecuta. Esto es la clave para una automatizaci\u00f3n verdaderamente escalable y libre de errores.</p>"},{"location":"fase3_automatizacion/inventario_dinamico/#por-que-es-un-salto-cualitativo","title":"\ud83e\udd14 \u00bfPor qu\u00e9 es un Salto Cualitativo?","text":"Inventario Est\u00e1tico (<code>.ini</code>) Inventario Din\u00e1mico (NetBox) Fr\u00e1gil: Propenso a errores de tipeo y a quedar desactualizado. Robusto: Los datos provienen de una fuente centralizada y estructurada. Manual: Debes editar el archivo cada vez que a\u00f1ades o quitas un nodo. Autom\u00e1tico: Si un nodo se a\u00f1ade a NetBox, Ansible lo ve. Si se elimina, desaparece. Limitado: La agrupaci\u00f3n de hosts es b\u00e1sica. Inteligente: Puedes agrupar hosts bas\u00e1ndote en cualquier dato de NetBox: sitio, rol, fabricante, tag, tenant, etc."},{"location":"fase3_automatizacion/inventario_dinamico/#paso-1-instalar-el-plugin-de-inventario-de-netbox","title":"\u2705 Paso 1: Instalar el Plugin de Inventario de NetBox","text":"<p>Ansible se integra con otras herramientas a trav\u00e9s de colecciones, que son paquetes de plugins y m\u00f3dulos. Necesitamos instalar la colecci\u00f3n oficial de NetBox.</p> <pre><code># Aseg\u00farate de que tu entorno virtual de Ansible est\u00e9 activado\nansible-galaxy collection install netbox.netbox\n</code></pre> <ul> <li><code>ansible-galaxy</code>: Es el comando de Ansible para gestionar colecciones y roles de la comunidad.</li> </ul>"},{"location":"fase3_automatizacion/inventario_dinamico/#paso-2-configurar-el-plugin-de-inventario","title":"\u2705 Paso 2: Configurar el Plugin de Inventario","text":"<p>Ahora, en lugar de un archivo <code>.ini</code>, crearemos un archivo <code>.yml</code> que le dice a Ansible c\u00f3mo usar el plugin de NetBox. Por convenci\u00f3n, se suele nombrar seg\u00fan el entorno (ej: <code>produccion.netbox.yml</code>).</p> <p>Crea un archivo llamado <code>produccion.netbox.yml</code>:</p> <pre><code># Fichero de configuraci\u00f3n para el inventario din\u00e1mico de NetBox\nplugin: netbox.netbox.nb_inventory\n\n# --- Conexi\u00f3n a la API de NetBox ---\napi_endpoint: http://&lt;IP_DE_TU_SERVIDOR_NETBOX&gt;\ntoken: \"{{ lookup('env', 'NETBOX_TOKEN') }}\" # Lee el token de una variable de entorno\nvalidate_certs: false # Cambiar a 'true' si usas un certificado SSL v\u00e1lido\n\n# --- Mapeo de Datos --- \n# Le decimos a Ansible c\u00f3mo construir el inventario a partir de los datos de NetBox\n\n# Queremos usar el nombre del dispositivo de NetBox como el nombre en el inventario\nhostname_preference:\n  - name\n\n# --- Agrupaci\u00f3n Inteligente ---\n# Aqu\u00ed est\u00e1 la magia: creamos grupos de Ansible basados en los atributos de NetBox\ngroup_by:\n  - device_roles  # Crea un grupo por cada Rol (ej: grupo \"Nodo_Cliente\")\n  - sites         # Crea un grupo por cada Sitio (ej: grupo \"USA-MIA-01\")\n  - tags          # Crea un grupo por cada Tag (ej: grupo \"tag_cliente_a\")\n  - tenants       # Crea un grupo por cada Cliente/Tenant\n\n# --- Composici\u00f3n de Variables ---\n# Podemos crear variables para nuestros hosts usando datos de NetBox\ncompose:\n  # Definimos la variable ansible_host para que apunte a la IP primaria del dispositivo\n  ansible_host: primary_ip4.address | split('/')[0]\n</code></pre> <p>An\u00e1lisis de la Configuraci\u00f3n: - <code>token</code>: Usamos <code>lookup('env', 'NETBOX_TOKEN')</code> para leer el token de una variable de entorno. Esto es m\u00e1s seguro que ponerlo directamente en el archivo. - <code>group_by</code>: Le damos a Ansible una lista de atributos de NetBox. Crear\u00e1 autom\u00e1ticamente un grupo por cada valor \u00fanico de esos atributos. - <code>compose</code>: Esta secci\u00f3n es muy poderosa. Nos permite construir variables de Ansible. Aqu\u00ed, estamos creando la variable <code>ansible_host</code> (que le dice a Ansible a qu\u00e9 IP conectarse) extrayendo la direcci\u00f3n IP primaria del dispositivo desde NetBox.</p>"},{"location":"fase3_automatizacion/inventario_dinamico/#paso-3-probar-el-inventario-dinamico","title":"\u2705 Paso 3: Probar el Inventario Din\u00e1mico","text":"<p>Antes de usarlo, vamos a pedirle a Ansible que nos muestre el inventario que construir\u00eda con esta configuraci\u00f3n.</p> <ol> <li>Exporta tu token como variable de entorno: <code>bash     export NETBOX_TOKEN='TU_TOKEN_DE_API_AQUI'</code></li> <li>Ejecuta <code>ansible-inventory</code>: <code>bash     ansible-inventory -i produccion.netbox.yml --graph</code><ul> <li>Deber\u00edas ver una estructura de \u00e1rbol (<code>--graph</code>) que muestra c\u00f3mo Ansible ha agrupado tus 10 nodos por rol, sitio y cualquier otro <code>group_by</code> que hayas definido.</li> </ul> </li> </ol>"},{"location":"fase3_automatizacion/inventario_dinamico/#paso-4-usar-el-inventario-dinamico-en-un-playbook","title":"\u2705 Paso 4: Usar el Inventario Din\u00e1mico en un Playbook","text":"<p>Ahora, simplemente reemplaza el archivo de inventario est\u00e1tico por el din\u00e1mico al ejecutar tu playbook.</p> <pre><code># Ejecuta el mismo playbook de antes, pero con el nuevo inventario\nansible-playbook -i produccion.netbox.yml check_reachability.yml\n</code></pre> <p>El playbook ahora se ejecutar\u00e1 sobre el grupo <code>windows_nodes</code> (o <code>Nodo_Cliente</code>, si ajustas el <code>hosts:</code> en el playbook), pero la fuente de esa lista de servidores es ahora, y para siempre, NetBox.</p> <p>\u00a1Has desacoplado tu automatizaci\u00f3n de una lista manual y la has conectado a tu fuente de verdad!</p>"},{"location":"fase3_automatizacion/playbooks/","title":"\u2699\ufe0f Fase 3 \u2013 Primeros Pasos con Ansible: Inventario y Playbooks","text":""},{"location":"fase3_automatizacion/playbooks/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<p>Instalar Ansible, configurar la conexi\u00f3n a los nodos Windows y ejecutar un primer playbook de diagn\u00f3stico. En esta secci\u00f3n, usaremos un inventario est\u00e1tico (un archivo de texto simple) como primer paso para verificar que la comunicaci\u00f3n entre el nodo de control y los nodos gestionados funciona correctamente antes de pasar a un inventario din\u00e1mico m\u00e1s complejo.</p>"},{"location":"fase3_automatizacion/playbooks/#paso-1-instalar-ansible-en-el-nodo-de-control","title":"\u2705 Paso 1: Instalar Ansible en el Nodo de Control","text":"<p>Ansible se instala \u00fanicamente en tu m\u00e1quina de gesti\u00f3n (tu ordenador en Colombia). La forma m\u00e1s com\u00fan es a trav\u00e9s de <code>pip</code>, el gestor de paquetes de Python.</p> <pre><code># Es una buena pr\u00e1ctica crear un entorno virtual de Python primero\npython3 -m venv ansible_env\nsource ansible_env/bin/activate\n\n# Instalar Ansible dentro del entorno virtual\npip install ansible\n</code></pre> <ul> <li>Entorno Virtual: Crear un entorno virtual (<code>venv</code>) a\u00edsla las dependencias de Ansible de otros proyectos de Python que puedas tener, evitando conflictos.</li> <li>Verificaci\u00f3n: Una vez instalado, ejecuta <code>ansible --version</code> para confirmar que la instalaci\u00f3n fue exitosa.</li> </ul>"},{"location":"fase3_automatizacion/playbooks/#paso-2-configurar-la-conexion-a-nodos-windows","title":"\u2705 Paso 2: Configurar la Conexi\u00f3n a Nodos Windows","text":"<p>Ansible fue creado originalmente para gestionar servidores Linux, por lo que la comunicaci\u00f3n con Windows requiere una configuraci\u00f3n espec\u00edfica. Afortunadamente, el soporte para Windows es hoy muy robusto.</p> <p>El m\u00e9todo moderno y recomendado es usar la conexi\u00f3n SSH que ya configuramos en la Fase 1. Necesitamos decirle a Ansible c\u00f3mo debe comunicarse con nuestros nodos Windows.</p>"},{"location":"fase3_automatizacion/playbooks/#paso-3-crear-un-inventario-estatico-inicial","title":"\u2705 Paso 3: Crear un Inventario Est\u00e1tico Inicial","text":"<p>El inventario es el listado de servidores que Ansible gestionar\u00e1. Empezaremos con un archivo simple en formato INI.</p> <p>Crea un archivo llamado <code>inventory.ini</code>:</p> <pre><code># =====================================\n# Inventario para la Red de MiniPCs\n# =====================================\n\n# Definimos un grupo llamado [windows_nodes]\n[windows_nodes]\n# Usamos los alias que configuramos en nuestro archivo ~/.ssh/config\n# Esto es una buena pr\u00e1ctica porque centraliza la informaci\u00f3n de conexi\u00f3n (IP, usuario, clave)\n# en un solo lugar.\nnodo-a-01\nnodo-a-02\nnodo-a-03\nnodo-a-04\nnodo-a-05\nnodo-a-06\nnodo-a-07\nnodo-a-08\nnodo-a-09\nnodo-a-10\n\n# Definimos variables espec\u00edficas para el grupo [windows_nodes]\n[windows_nodes:vars]\n# Le dice a Ansible que, una vez conectado, debe usar una shell de PowerShell.\n# \u00a1Esto es fundamental para que los comandos se ejecuten correctamente en Windows!\nansible_shell_type = powershell\n</code></pre> <p>Nota Importante: No necesitamos especificar <code>ansible_user</code> o <code>ansible_ssh_private_key_file</code> aqu\u00ed porque ya lo hemos definido en nuestro archivo <code>~/.ssh/config</code>. Ansible es lo suficientemente inteligente como para usar esa configuraci\u00f3n.</p>"},{"location":"fase3_automatizacion/playbooks/#paso-4-tu-primer-playbook-de-diagnostico","title":"\u2705 Paso 4: Tu Primer Playbook de Diagn\u00f3stico","text":"<p>Un playbook es una lista de tareas. Crearemos uno muy simple para verificar que podemos conectarnos a todos los nodos y obtener informaci\u00f3n de ellos.</p> <p>Crea un archivo llamado <code>check_reachability.yml</code>:</p> <pre><code>---\n- name: Test de Conectividad y Recolecci\u00f3n de Datos para Nodos Windows\n  hosts: windows_nodes\n  gather_facts: no # Desactivamos la recolecci\u00f3n autom\u00e1tica por ahora\n\n  tasks:\n    - name: 1. Probar la conectividad basica (ping)\n      ansible.windows.win_ping:\n      register: ping_result\n\n    - name: 2. Mostrar el resultado del ping\n      debug:\n        var: ping_result\n\n    - name: 3. Recolectar \"facts\" del sistema (informacion de hardware, SO, etc.)\n      ansible.windows.setup:\n      register: windows_facts\n\n    - name: 4. Mostrar el nombre del SO y la memoria RAM de cada nodo\n      debug:\n        msg: \"El sistema operativo es {{ windows_facts.ansible_facts.ansible_os_distribution }} y tiene {{ windows_facts.ansible_facts.ansible_memory_mb.real.total }} MB de RAM.\"\n</code></pre> <p>An\u00e1lisis de este Playbook: - <code>hosts: windows_nodes</code>: Apunta al grupo que definimos en nuestro inventario. - <code>win_ping</code>: Es el m\u00f3dulo de Ansible para Windows que no solo hace un <code>ping</code> de red, sino que verifica que la conexi\u00f3n de Ansible y la ejecuci\u00f3n de PowerShell funcionan. Es un \"hola mundo\" para la conectividad de Ansible. - <code>register</code>: Guarda toda la salida de una tarea en una variable. - <code>debug</code>: Un m\u00f3dulo para imprimir variables o mensajes, indispensable para depurar. - <code>setup</code>: Un m\u00f3dulo especial que recolecta una gran cantidad de informaci\u00f3n (facts) sobre el sistema remoto.</p>"},{"location":"fase3_automatizacion/playbooks/#paso-5-ejecutar-el-playbook","title":"\u2705 Paso 5: Ejecutar el Playbook","text":"<p>Desde tu terminal (con el entorno virtual activado), ejecuta:</p> <pre><code>ansible-playbook -i inventory.ini check_reachability.yml\n</code></pre> <ul> <li><code>-i inventory.ini</code>: Especifica qu\u00e9 archivo de inventario usar.</li> </ul> <p>Ver\u00e1s c\u00f3mo Ansible se conecta a cada host y ejecuta las tareas. La salida de la \u00faltima tarea te mostrar\u00e1 un mensaje personalizado con el sistema operativo y la memoria de cada uno de los 10 nodos, confirmando que la automatizaci\u00f3n funciona.</p>"},{"location":"fase3_automatizacion/tareas_comunes/","title":"\u2699\ufe0f Fase 3 \u2013 Playbooks para Tareas Comunes de Gesti\u00f3n en Windows","text":""},{"location":"fase3_automatizacion/tareas_comunes/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<p>Crear un conjunto de playbooks de Ansible modulares y reutilizables para ejecutar las tareas de administraci\u00f3n m\u00e1s frecuentes en un entorno Windows. Esto incluye la gesti\u00f3n de paquetes de software, la manipulaci\u00f3n de servicios y la transferencia de archivos, sentando las bases para una automatizaci\u00f3n m\u00e1s compleja.</p>"},{"location":"fase3_automatizacion/tareas_comunes/#playbook-1-gestion-de-software-con-chocolatey","title":"\ud83d\udce6 Playbook 1: Gesti\u00f3n de Software con Chocolatey","text":"<p>La gesti\u00f3n manual de software en Windows (descargar un <code>.exe</code>, hacer clic en \"Siguiente\") no es escalable. La soluci\u00f3n es usar un gestor de paquetes. Chocolatey es el est\u00e1ndar de facto en la comunidad de automatizaci\u00f3n de Windows.</p>"},{"location":"fase3_automatizacion/tareas_comunes/#a-instalar-chocolatey","title":"a) Instalar Chocolatey","text":"<p>Este playbook instala el gestor de paquetes Chocolatey en los nodos, pero solo si no est\u00e1 ya presente.</p> <p><code>install_chocolatey.yml</code></p> <pre><code>---\n- name: Instalar y Configurar Chocolatey en Nodos Windows\n  hosts: Nodo_Cliente\n  gather_facts: no\n\n  tasks:\n    - name: Instalar Chocolatey desde su script oficial\n      ansible.windows.win_shell: |\n        Set-ExecutionPolicy Bypass -Scope Process -Force;\n        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072;\n        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))\n      args:\n        creates: 'C:\\ProgramData\\chocolatey\\choco.exe'\n      register: choco_install_result\n\n    - name: Mostrar mensaje de estado\n      debug:\n        msg: \"Chocolatey ya estaba instalado.\" \n      when: not choco_install_result.changed\n</code></pre> <ul> <li>Idempotencia: La cl\u00e1usula <code>args.creates</code> es la que garantiza que este playbook no haga nada si detecta que <code>choco.exe</code> ya existe, haciendo la operaci\u00f3n segura para ejecuciones repetidas.</li> </ul>"},{"location":"fase3_automatizacion/tareas_comunes/#b-instalar-actualizar-y-eliminar-paquetes","title":"b) Instalar, Actualizar y Eliminar Paquetes","text":"<p>Una vez instalado Chocolatey, podemos usar el m\u00f3dulo <code>win_chocolatey</code> de Ansible para gestionar el software de forma declarativa.</p> <p><code>manage_software.yml</code></p> <pre><code>---\n- name: Gestionar Paquetes de Software Esenciales\n  hosts: Nodo_Cliente\n  gather_facts: no\n\n  tasks:\n    - name: Asegurar que 7-Zip y Notepad++ esten instalados\n      ansible.windows.win_chocolatey:\n        name:\n          - 7zip\n          - notepadplusplus\n        state: present\n\n    - name: Asegurar que una version especifica de Git este instalada\n      ansible.windows.win_chocolatey:\n        name: git\n        version: '2.30.1'\n        state: present\n\n    - name: Asegurar que un paquete antiguo (ej: putty) este desinstalado\n      ansible.windows.win_chocolatey:\n        name: putty\n        state: absent\n</code></pre> <ul> <li>Estado Declarativo: Simplemente declaras el <code>state</code> que deseas (<code>present</code>, <code>absent</code>, <code>latest</code>) y Ansible se encarga del resto.</li> </ul>"},{"location":"fase3_automatizacion/tareas_comunes/#playbook-2-gestion-de-servicios-de-windows","title":"\u2699\ufe0f Playbook 2: Gesti\u00f3n de Servicios de Windows","text":"<p>Este playbook asegura que los servicios cr\u00edticos est\u00e9n en el estado correcto (corriendo, detenido, etc.) y configurados para iniciarse correctamente.</p> <p><code>manage_services.yml</code></p> <pre><code>---\n- name: Gestionar Servicios Cr\u00edticos de Windows\n  hosts: Nodo_Cliente\n  gather_facts: no\n\n  tasks:\n    - name: Asegurar que el servicio SSHD este iniciado y en modo automatico\n      ansible.windows.win_service:\n        name: sshd\n        state: started\n        start_mode: auto\n\n    - name: Asegurar que el servicio de Windows Update este habilitado pero detenido\n      ansible.windows.win_service:\n        name: wuauserv\n        state: stopped\n        start_mode: manual\n      register: service_result\n\n    - name: Reiniciar el servicio del exporter de monitoreo si fue modificado\n      ansible.windows.win_service:\n        name: windows_exporter\n        state: restarted\n      when: service_result.changed # Ejemplo de como reiniciar un servicio solo si otra tarea hizo un cambio\n</code></pre> <ul> <li>Control Fino: Puedes definir no solo si un servicio est\u00e1 corriendo, sino tambi\u00e9n su modo de inicio, y puedes usar los resultados de una tarea para disparar otra (como reiniciar un servicio).</li> </ul>"},{"location":"fase3_automatizacion/tareas_comunes/#playbook-3-gestion-de-archivos-y-plantillas","title":"\ud83d\udcc2 Playbook 3: Gesti\u00f3n de Archivos y Plantillas","text":"<p>Este playbook muestra c\u00f3mo copiar archivos y c\u00f3mo usar plantillas para desplegar archivos de configuraci\u00f3n personalizados.</p> <p><code>manage_files.yml</code></p> <pre><code>---\n- name: Gestionar Archivos y Configuraciones\n  hosts: Nodo_Cliente\n  gather_facts: yes # Necesitamos los facts para las plantillas\n\n  tasks:\n    - name: Copiar un archivo de banner de bienvenida\n      ansible.windows.win_copy:\n        src: files/motd.txt # Un archivo en tu nodo de control\n        dest: C:\\etc\\motd.txt\n\n    - name: Desplegar un archivo de configuracion desde una plantilla\n      ansible.windows.win_template:\n        src: templates/config.ini.j2 # Un archivo de plantilla Jinja2\n        dest: C:\\ProgramData\\MyApp\\config.ini\n</code></pre> <p>Ejemplo de plantilla <code>templates/config.ini.j2</code>:</p> <pre><code>[Settings]\nHostname = {{ ansible_hostname }}\nIP_Address = {{ ansible_default_ipv4.address }}\nMemory_MB = {{ ansible_memory_mb.real.total }}\n</code></pre> <ul> <li>Plantillas Jinja2: El m\u00f3dulo <code>win_template</code> te permite usar variables de Ansible (los <code>facts</code> que recolectamos) dentro de tus archivos. Al desplegar la plantilla, Ansible reemplazar\u00e1 <code>{{ ansible_hostname }}</code> por el nombre real del host, creando un archivo de configuraci\u00f3n personalizado para cada nodo.</li> </ul>"},{"location":"fase4_monitoring/dashboards/","title":"\ud83d\udcca Fase 4 \u2013 Visualizaci\u00f3n de Datos con Dashboards de Grafana","text":""},{"location":"fase4_monitoring/dashboards/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<p>Transformar los datos de m\u00e9tricas en bruto recolectados por Prometheus en informaci\u00f3n visual, accionable e intuitiva mediante la creaci\u00f3n y personalizaci\u00f3n de dashboards en Grafana. El objetivo es tener una visi\u00f3n general de la salud de la red (<code>monitoring</code>) y la capacidad de investigar problemas espec\u00edficos (<code>troubleshooting</code>).</p>"},{"location":"fase4_monitoring/dashboards/#el-poder-de-la-visualizacion","title":"\ud83e\udd14 El Poder de la Visualizaci\u00f3n","text":"<p>Una base de datos con millones de puntos de datos de series temporales es in\u00fatil sin una forma de interpretarla. Grafana es la herramienta que te permite: - Detectar Anomal\u00edas de un Vistazo: Un pico repentino en un gr\u00e1fico de CPU es mucho m\u00e1s f\u00e1cil de detectar que un n\u00famero en una tabla. - Correlacionar Datos: Puedes superponer gr\u00e1ficos de diferentes m\u00e9tricas (ej: uso de CPU y latencia de red) para encontrar la causa ra\u00edz de un problema. - Comunicar el Estado: Un dashboard claro es la mejor manera de mostrar el estado de la infraestructura a partes interesadas no t\u00e9cnicas.</p>"},{"location":"fase4_monitoring/dashboards/#paso-1-importar-un-dashboard-comunitario-el-camino-rapido","title":"\u2705 Paso 1: Importar un Dashboard Comunitario (El Camino R\u00e1pido)","text":"<p>La comunidad de Grafana ha creado miles de dashboards. Aprovecharemos este trabajo para tener una base s\u00f3lida al instante.</p> <ol> <li> <p>Encontrar el Dashboard Adecuado: El dashboard con ID <code>14694</code> es una excelente opci\u00f3n para el <code>windows_exporter</code>. Proporciona una visi\u00f3n muy completa del estado de un host Windows.</p> </li> <li> <p>Proceso de Importaci\u00f3n:</p> <ul> <li>En Grafana, ve a Dashboards &gt; New &gt; Import.</li> <li>Pega el ID <code>14694</code> en el campo \"Import via grafana.com\" y haz clic en Load.</li> <li>Punto Clave: En la parte inferior de las opciones de importaci\u00f3n, Grafana te pedir\u00e1 que selecciones la fuente de datos de Prometheus. Aseg\u00farate de elegir el nombre de la fuente de datos que creaste en el paso anterior.</li> <li>Haz clic en Import.</li> </ul> </li> <li> <p>Explorar el Dashboard:</p> <ul> <li>Inmediatamente tendr\u00e1s un dashboard operativo. En la parte superior, ver\u00e1s un men\u00fa desplegable llamado <code>instance</code> o <code>host</code>. \u00dasalo para cambiar la vista entre los diferentes MiniPCs de tu red.</li> <li>Dedica tiempo a explorar los diferentes paneles para familiarizarte con las m\u00e9tricas que <code>windows_exporter</code> proporciona.</li> </ul> </li> </ol>"},{"location":"fase4_monitoring/dashboards/#paso-2-crear-un-dashboard-personalizado-la-vista-del-gestor","title":"\u2705 Paso 2: Crear un Dashboard Personalizado (La Vista del Gestor)","text":"<p>El dashboard importado es excelente para ver un solo nodo, pero t\u00fa necesitas una vista de flota, un resumen de alto nivel de toda tu red. Crearemos un dashboard para esto.</p> <ol> <li> <p>Crear un Nuevo Dashboard: Ve a Dashboards &gt; New &gt; New Dashboard.</p> </li> <li> <p>A\u00f1adir un Panel de \"Estado General\":</p> <ul> <li>+ Add visualization &gt; Stat</li> <li>Consulta (Query): <code>count(up{job=\"windows_nodes\"})</code></li> <li>T\u00edtulo del Panel: <code>Nodos Activos</code></li> <li>Este panel mostrar\u00e1 un n\u00famero grande y claro: la cantidad de nodos que Prometheus est\u00e1 monitoreando activamente.</li> </ul> </li> <li> <p>A\u00f1adir una Tabla de \"Top 5 Nodos por CPU\":</p> <ul> <li>+ Add visualization &gt; Table</li> <li>Consulta (Query): <code>topk(5, 100 - (avg by (instance) (rate(windows_cpu_time_total{mode=\"idle\"}[2m])) * 100))</code></li> <li>T\u00edtulo del Panel: <code>Top 5 - Uso de CPU</code></li> <li>Esto te muestra instant\u00e1neamente qu\u00e9 nodos est\u00e1n trabajando m\u00e1s, un indicador clave para investigar problemas de rendimiento.</li> </ul> </li> <li> <p>A\u00f1adir un Gr\u00e1fico de \"Espacio en Disco Cr\u00edtico\":</p> <ul> <li>+ Add visualization &gt; Time series</li> <li>Consulta (Query): <code>100 - (windows_logical_disk_free_bytes{volume=~\"C:\"} / windows_logical_disk_size_bytes{volume=~\"C:\"} * 100)</code></li> <li>T\u00edtulo del Panel: <code>Uso de Disco C:</code></li> <li>Umbrales (Thresholds): En las opciones del panel, puedes configurar umbrales para que el gr\u00e1fico cambie de color (ej: a rojo cuando el uso supere el 85%).</li> </ul> </li> <li> <p>Guardar el Dashboard: Guarda tu nuevo dashboard con un nombre como <code>[Resumen de Flota] - Estado General</code>.</p> </li> </ol>"},{"location":"fase4_monitoring/dashboards/#paso-3-configurar-alertas-proactivas","title":"\u2705 Paso 3: Configurar Alertas Proactivas","text":"<p>El monitoreo pasivo (mirar dashboards) no es suficiente. Necesitas que el sistema te notifique a ti cuando algo va mal. </p> <ol> <li> <p>Crear un Canal de Notificaci\u00f3n:</p> <ul> <li>Ve a Alerting &gt; Notification channels.</li> <li>Configura un canal. Puede ser tu email, un canal de Slack, Telegram, etc. Sigue las instrucciones para el canal que elijas.</li> </ul> </li> <li> <p>Crear una Regla de Alerta:</p> <ul> <li>Vuelve a tu panel de \"Uso de Disco C:\".</li> <li>Ve a la pesta\u00f1a Alert del panel.</li> <li>Crea una regla que se dispare CUANDO el <code>valor promedio</code> de la <code>consulta</code> en los <code>\u00faltimos 5 minutos</code> ES SUPERIOR A <code>85</code>.</li> <li>Asigna la alerta para que env\u00ede notificaciones a tu canal reci\u00e9n creado.</li> </ul> </li> </ol> <p>Ahora, si el disco C: de cualquier nodo supera el 85% de uso durante 5 minutos, recibir\u00e1s una notificaci\u00f3n autom\u00e1tica sin necesidad de estar mirando el dashboard.</p>"},{"location":"fase4_monitoring/dashboards/#checklist-de-validacion","title":"\u2705 Checklist de Validaci\u00f3n","text":"<ul> <li>[ ] El dashboard comunitario para Windows ha sido importado y muestra datos correctamente.</li> <li>[ ] Se ha creado un dashboard personalizado de \"Resumen de Flota\".</li> <li>[ ] El panel de \"Nodos Activos\" muestra el n\u00famero correcto de nodos.</li> <li>[ ] Los paneles de \"Top CPU\" y \"Uso de Disco\" muestran datos coherentes.</li> <li>[ ] Se ha configurado al menos un canal de notificaci\u00f3n.</li> <li>[ ] Se ha creado una regla de alerta funcional para el espacio en disco.</li> </ul>"},{"location":"fase4_monitoring/exporters/","title":"\ud83d\udcca Fase 4 \u2013 Despliegue de Exporters en Nodos Windows","text":""},{"location":"fase4_monitoring/exporters/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<p>Instalar y configurar el <code>windows_exporter</code> en todos los MiniPCs de forma automatizada usando Ansible. Este componente es el puente que permite a Prometheus recolectar las m\u00e9tricas internas del sistema operativo Windows.</p>"},{"location":"fase4_monitoring/exporters/#que-es-un-exporter-y-como-funciona","title":"\ud83e\udd14 \u00bfQu\u00e9 es un Exporter y c\u00f3mo funciona?","text":"<p>Prometheus funciona con un modelo pull (jalar), no push (empujar). Esto significa que Prometheus decide cu\u00e1ndo recolectar las m\u00e9tricas; los nodos no se las env\u00edan activamente.</p> <p>Un exporter es un peque\u00f1o servidor web que se ejecuta en el nodo a monitorear. Su \u00fanica funci\u00f3n es: 1.  Recolectar m\u00e9tricas del sistema operativo local (uso de CPU, memoria, I/O de disco, etc.). 2.  Traducirlas al formato de texto simple que Prometheus entiende. 3.  Exponerlas en una URL, t\u00edpicamente en el endpoint <code>/metrics</code>.</p> <p>Cuando Prometheus \"raspa\" (scrapes) un nodo, simplemente hace una petici\u00f3n HTTP a <code>http://&lt;IP_DEL_NODO&gt;:9182/metrics</code> y almacena los datos que recibe.</p>"},{"location":"fase4_monitoring/exporters/#playbook-para-desplegar-windows_exporter","title":"\u2705 Playbook para Desplegar <code>windows_exporter</code>","text":"<p>Usaremos Ansible para una instalaci\u00f3n desatendida, idempotente y consistente en toda la flota de nodos.</p> <p><code>install_windows_exporter.yml</code></p> <pre><code>---\n- name: Desplegar y Configurar Windows Exporter\n  hosts: Nodo_Cliente\n  gather_facts: no\n  vars:\n    exporter_version: \"0.25.0\"\n    exporter_url: \"https://github.com/prometheus-community/windows_exporter/releases/download/v{{ exporter_version }}/windows_exporter-{{ exporter_version }}-amd64.msi\"\n    exporter_dest_path: \"C:\\\\Windows\\\\Temp\\\\windows_exporter.msi\"\n\n  tasks:\n    - name: 1. Descargar el instalador de Windows Exporter\n      ansible.windows.win_get_url:\n        url: \"{{ exporter_url }}\"\n        dest: \"{{ exporter_dest_path }}\"\n\n    - name: 2. Instalar el paquete MSI\n      ansible.windows.win_package:\n        path: \"{{ exporter_dest_path }}\"\n        state: present\n\n    - name: 3. Asegurar que el servicio este iniciado y en modo automatico\n      ansible.windows.win_service:\n        name: windows_exporter\n        state: started\n        start_mode: auto\n\n    - name: 4. Abrir el puerto del exporter en el Firewall de Windows\n      community.windows.win_firewall_rule:\n        name: \"Windows Exporter Metrics (Prometheus)\"\n        localport: 9182\n        action: allow\n        direction: in\n        protocol: tcp\n        state: present\n        enabled: yes\n        description: \"Permite a Prometheus recolectar m\u00e9tricas.\"\n</code></pre> <p>Mejoras en este Playbook: - Variables: Se define la versi\u00f3n y la URL en la secci\u00f3n <code>vars</code> para facilitar futuras actualizaciones. Para actualizar el exporter en toda la flota, solo necesitas cambiar el n\u00famero de versi\u00f3n en un lugar. - Nombres Descriptivos: La regla de firewall tiene un nombre y una descripci\u00f3n claros, lo que facilita la auditor\u00eda.</p>"},{"location":"fase4_monitoring/exporters/#configurar-el-descubrimiento-de-servicios-en-prometheus","title":"\u2705 Configurar el Descubrimiento de Servicios en Prometheus","text":"<p>Ahora, le diremos a Prometheus que consulte a NetBox para encontrar sus objetivos (targets).</p> <p>Edita tu archivo <code>/opt/monitoring/prometheus/prometheus.yml</code> en el servidor de monitoreo y a\u00f1ade un nuevo <code>job_name</code>:</p> <pre><code># ... (secci\u00f3n global y job 'prometheus' existentes)\n\n  - job_name: 'windows_nodes'\n    # Usar el plugin de descubrimiento de servicios de NetBox\n    netbox_sd_configs:\n      - server: 'http://&lt;IP_DE_TU_SERVIDOR_NETBOX&gt;'\n        authorization:\n          credentials: !secret netbox_token # Lee el token de un archivo secreto\n        port: 9182\n        refresh_interval: 1m # Consultar a NetBox cada minuto por si hay nuevos nodos\n\n    # Filtrar y re-etiquetar los objetivos descubiertos\n    relabel_configs:\n      # Mantener solo los dispositivos que tienen el rol \"Nodo Cliente\"\n      - source_labels: [__meta_netbox_device_role]\n        regex: 'Nodo Cliente'\n        action: keep\n\n      # Mantener solo los dispositivos que est\u00e1n en estado \"Activo\"\n      - source_labels: [__meta_netbox_status]\n        regex: 'active'\n        action: keep\n</code></pre> <p>Mejoras en esta Configuraci\u00f3n: - Gesti\u00f3n de Secretos: En lugar de poner el token en texto plano, <code>!secret netbox_token</code> le dice a Prometheus que lo lea de un archivo externo (ver abajo). - Filtrado Adicional: Hemos a\u00f1adido una segunda regla de <code>relabel_configs</code> para asegurarnos de que solo se monitorean los nodos cuyo estado en NetBox es \"Activo\".</p> <p>Crear el archivo de secretos de Prometheus: En tu servidor de monitoreo, crea el archivo <code>/opt/monitoring/prometheus/secrets.yml</code>:</p> <pre><code>netbox_token: 'TU_TOKEN_DE_API_DE_NETBOX_AQUI'\n</code></pre> <p>Luego, en tu <code>docker-compose.yml</code>, necesitas mapear este archivo al contenedor de Prometheus. A\u00f1ade esta l\u00ednea bajo <code>prometheus.volumes</code>: <code>- ./prometheus/secrets.yml:/etc/prometheus/secrets.yml</code></p> <p>Finalmente, reinicia Prometheus para que todos los cambios surtan efecto: <code>cd /opt/monitoring &amp;&amp; sudo docker-compose restart prometheus</code></p>"},{"location":"fase4_monitoring/exporters/#checklist-de-validacion","title":"\u2705 Checklist de Validaci\u00f3n","text":"<ul> <li>[ ] El playbook de Ansible se ejecuta sin errores en todos los nodos.</li> <li>[ ] En un nodo cualquiera, puedes abrir un navegador y ver las m\u00e9tricas en <code>http://localhost:9182/metrics</code>.</li> <li>[ ] En la interfaz de Prometheus (<code>:9090</code>), la secci\u00f3n Status &gt; Targets muestra todos tus nodos <code>windows_nodes</code> con el estado <code>UP</code>.</li> <li>[ ] Si cambias un nodo a estado <code>offline</code> en NetBox, despu\u00e9s de un minuto desaparecer\u00e1 de la lista de objetivos de Prometheus.</li> </ul>"},{"location":"fase4_monitoring/instalacion/","title":"\ud83d\udcca Fase 4 \u2013 Instalaci\u00f3n del Stack de Monitoreo: Prometheus y Grafana","text":""},{"location":"fase4_monitoring/instalacion/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<p>Desplegar la pila de monitoreo y observabilidad est\u00e1ndar de la industria, compuesta por Prometheus para la recolecci\u00f3n y almacenamiento de m\u00e9tricas, y Grafana para la visualizaci\u00f3n y creaci\u00f3n de dashboards. Esta instalaci\u00f3n se realizar\u00e1 utilizando Docker para asegurar la portabilidad y facilidad de mantenimiento.</p>"},{"location":"fase4_monitoring/instalacion/#que-es-un-stack-de-monitoreo-y-por-que-es-vital","title":"\ud83e\udd14 \u00bfQu\u00e9 es un Stack de Monitoreo y por qu\u00e9 es vital?","text":"<p>Un stack de monitoreo es un conjunto de herramientas que trabajan juntas para darte visibilidad sobre la salud y el rendimiento de tu infraestructura. Sin \u00e9l, est\u00e1s operando \"a ciegas\".</p> Herramienta Funci\u00f3n Analog\u00eda Prometheus El Motor de Recolecci\u00f3n y Almacenamiento. Es una base de datos de series temporales (TSDB) que, a intervalos regulares, \"raspa\" (scrapes) puntos de datos (m\u00e9tricas) de tus nodos a trav\u00e9s de HTTP. Es el enfermero que pasa cada 15 segundos por la habitaci\u00f3n de cada paciente (nodo) y anota sus signos vitales (CPU, RAM, disco) en un historial cl\u00ednico. Grafana La Plataforma de Visualizaci\u00f3n. Es una herramienta que se conecta a fuentes de datos como Prometheus y te permite construir dashboards interactivos con gr\u00e1ficos, medidores y alertas. Es el monitor de cabecera del hospital que toma el historial cl\u00ednico y lo convierte en gr\u00e1ficos de electrocardiograma y medidores de pulso que el doctor (t\u00fa) puede entender de un vistazo."},{"location":"fase4_monitoring/instalacion/#guia-de-instalacion-con-docker-compose","title":"\ud83d\udc33 Gu\u00eda de Instalaci\u00f3n con Docker Compose","text":"<p>Estos pasos se deben ejecutar en tu servidor de gesti\u00f3n (Ubuntu 22.04).</p>"},{"location":"fase4_monitoring/instalacion/#1-estructura-de-directorios","title":"1. Estructura de Directorios","text":"<p>Una buena organizaci\u00f3n de los archivos de configuraci\u00f3n es clave.</p> <pre><code># Crear una estructura de directorios dedicada para el stack de monitoreo\nsudo mkdir -p /opt/monitoring/prometheus\ncd /opt/monitoring\n</code></pre>"},{"location":"fase4_monitoring/instalacion/#2-archivo-de-orquestacion-docker-composeyml","title":"2. Archivo de Orquestaci\u00f3n <code>docker-compose.yml</code>","text":"<p>Crea un archivo <code>sudo nano docker-compose.yml</code> con el siguiente contenido:</p> <pre><code>version: '3.7'\n\nservices:\n  prometheus:\n    image: prom/prometheus:latest\n    container_name: prometheus\n    restart: unless-stopped\n    volumes:\n      - ./prometheus:/etc/prometheus/      # Mapea la configuraci\u00f3n local al contenedor\n      - prometheus_data:/prometheus         # Persiste la base de datos de m\u00e9tricas\n    command:\n      - '--config.file=/etc/prometheus/prometheus.yml'\n      - '--storage.tsdb.retention.time=1y' # Retener m\u00e9tricas por 1 a\u00f1o\n    ports:\n      - \"9090:9090\"\n\n  grafana:\n    image: grafana/grafana-oss:latest\n    container_name: grafana\n    restart: unless-stopped\n    volumes:\n      - grafana_data:/var/lib/grafana       # Persiste los dashboards y la configuraci\u00f3n\n    ports:\n      - \"3000:3000\"\n\nvolumes:\n  prometheus_data:\n  grafana_data:\n</code></pre> <ul> <li>Vol\u00famenes (<code>volumes</code>): Son cruciales. Separan los datos (que son persistentes) de los contenedores (que son ef\u00edmeros). Esto te permite actualizar o recrear los contenedores sin perder tu configuraci\u00f3n o tus m\u00e9tricas.</li> <li>Retenci\u00f3n (<code>retention.time</code>): Le hemos dicho a Prometheus que guarde los datos durante un a\u00f1o. El valor por defecto es de solo 15 d\u00edas.</li> </ul>"},{"location":"fase4_monitoring/instalacion/#3-archivo-de-configuracion-de-prometheus","title":"3. Archivo de Configuraci\u00f3n de Prometheus","text":"<p>Crea un archivo <code>sudo nano prometheus/prometheus.yml</code>. Por ahora, solo se monitorear\u00e1 a s\u00ed mismo para verificar que funciona.</p> <pre><code># /opt/monitoring/prometheus/prometheus.yml\nglobal:\n  scrape_interval: 15s # Frecuencia con la que se recolectan las m\u00e9tricas\n  evaluation_interval: 15s # Frecuencia con la que se eval\u00faan las reglas de alerta\n\nscrape_configs:\n  - job_name: 'prometheus'\n    static_configs:\n      - targets: ['localhost:9090']\n</code></pre>"},{"location":"fase4_monitoring/instalacion/#4-iniciar-el-stack","title":"4. Iniciar el Stack","text":"<p>Desde el directorio <code>/opt/monitoring</code>, ejecuta:</p> <pre><code>sudo docker-compose up -d\n</code></pre>"},{"location":"fase4_monitoring/instalacion/#paso-5-configuracion-inicial-de-grafana","title":"\u2705 Paso 5: Configuraci\u00f3n Inicial de Grafana","text":"<ol> <li> <p>Acceso y Cambio de Contrase\u00f1a:</p> <ul> <li>Abre tu navegador: <code>http://&lt;IP_DE_TU_SERVIDOR&gt;:3000</code></li> <li>Inicia sesi\u00f3n con <code>admin</code> / <code>admin</code> y establece una nueva contrase\u00f1a segura.</li> </ul> </li> <li> <p>Conectar Grafana con Prometheus:</p> <ul> <li>Ve a Configuration (\u2699\ufe0f) &gt; Data Sources.</li> <li>Haz clic en Add data source y selecciona Prometheus.</li> <li>En el campo URL, escribe <code>http://prometheus:9090</code>.<ul> <li>\u00bfPor qu\u00e9 <code>prometheus:9090</code>? Docker Compose crea una red virtual para los servicios definidos en el archivo. Dentro de esta red, los contenedores pueden comunicarse entre s\u00ed usando su nombre de servicio como si fuera un nombre de host (DNS).</li> </ul> </li> <li>Haz clic en Save &amp; test. Deber\u00edas ver un mensaje verde de \u00e9xito.</li> </ul> </li> </ol>"},{"location":"fase4_monitoring/instalacion/#checklist-de-validacion","title":"\u2705 Checklist de Validaci\u00f3n","text":"<ul> <li>[ ] La estructura de directorios en <code>/opt/monitoring</code> est\u00e1 creada.</li> <li>[ ] Los contenedores de Prometheus y Grafana est\u00e1n en estado <code>Up</code>.</li> <li>[ ] La interfaz web de Prometheus es accesible en el puerto <code>9090</code>.</li> <li>[ ] La interfaz web de Grafana es accesible en el puerto <code>3000</code>.</li> <li>[ ] La contrase\u00f1a de administrador de Grafana ha sido cambiada.</li> <li>[ ] La fuente de datos de Prometheus ha sido a\u00f1adida y probada con \u00e9xito en Grafana.</li> </ul>"},{"location":"fase5_seguridad_backups/backups/","title":"\ud83d\udd12 Fase 5 \u2013 Estrategia de Copias de Seguridad y Recuperaci\u00f3n","text":""},{"location":"fase5_seguridad_backups/backups/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<p>Dise\u00f1ar e implementar una estrategia de copias de seguridad autom\u00e1tica, fiable y verificable para los datos cr\u00edticos del plano de control. El objetivo no es solo \"hacer backups\", sino tener la certeza de que puedes restaurar el servicio r\u00e1pidamente en caso de un desastre.</p>"},{"location":"fase5_seguridad_backups/backups/#de-que-hacemos-backup-y-por-que","title":"\ud83e\udd14 \u00bfDe qu\u00e9 hacemos backup y por qu\u00e9?","text":"<p>La filosof\u00eda de la Infraestructura como C\u00f3digo nos dice que no necesitamos hacer un backup completo de cada MiniPC. Su configuraci\u00f3n est\u00e1 definida en nuestros playbooks de Ansible. Si un nodo falla, lo reemplazamos y lo reconstruimos desde el c\u00f3digo.</p> <p>Los datos verdaderamente irremplazables y de estado (stateful) residen en tu servidor de gesti\u00f3n:</p> <ol> <li>Base de Datos de NetBox (PostgreSQL): CR\u00cdTICO. Es el cerebro de tu operaci\u00f3n. Contiene toda la informaci\u00f3n sobre tus sitios, clientes, dispositivos, IPs, etc.</li> <li>Datos de Grafana: Contiene todos los dashboards que has creado, las fuentes de datos y las configuraciones de alertas. Perderlos supondr\u00eda horas de trabajo de reconstrucci\u00f3n.</li> <li>Configuraci\u00f3n de Prometheus: Aunque las m\u00e9tricas en s\u00ed pueden ser ef\u00edmeras, la configuraci\u00f3n de los <code>jobs</code> y las reglas de alerta son importantes.</li> <li>Tus Propios Archivos de Infraestructura: El repositorio completo con tus playbooks de Ansible, y sobre todo, tu Ansible Vault encriptado.</li> </ol>"},{"location":"fase5_seguridad_backups/backups/#la-regla-3-2-1-el-estandar-de-oro-de-los-backups","title":"\u2705 La Regla 3-2-1: El Est\u00e1ndar de Oro de los Backups","text":"<ul> <li>3 Copias: Mant\u00e9n tres copias de tus datos importantes (la original + 2 backups).</li> <li>2 Medios Diferentes: Almacena las copias en al menos dos tipos de almacenamiento distintos (ej: disco local del servidor + almacenamiento en la nube).</li> <li>1 Copia Off-site: Aseg\u00farate de que al menos una de las copias est\u00e9 en una ubicaci\u00f3n geogr\u00e1fica diferente.</li> </ul>"},{"location":"fase5_seguridad_backups/backups/#automating-backups-with-a-shell-script","title":"automating-backups-with-a-shell-script","text":"<p>Este script, ejecutado en tu servidor de gesti\u00f3n, orquestar\u00e1 el proceso de backup.</p> <p><code>/opt/scripts/backup_infra.sh</code></p> <pre><code>#!/bin/bash\n\nset -e # El script se detendr\u00e1 inmediatamente si un comando falla\n\n# --- Variables de Configuraci\u00f3n ---\nBACKUP_DIR=\"/mnt/backups/$(date +%Y-%m-%d)\" # Crea una carpeta por d\u00eda\nNETBOX_DOCKER_DIR=\"/opt/netbox-docker\"      # Ruta a la instalaci\u00f3n de NetBox\nGRAFANA_VOLUME_NAME=\"monitoring_grafana_data\" # Nombre del volumen de Docker de Grafana\n\n# --- Rclone Remote (Opcional pero recomendado) ---\n# Configura rclone con \"rclone config\" previamente\nRCLONE_REMOTE=\"b2:mi-bucket-de-backups\"\n\n# --- Inicio del Proceso ---\necho \"[INFO] Iniciando proceso de backup para $(date)\"\nmkdir -p $BACKUP_DIR\n\n# --- 1. Backup de la Base de Datos de NetBox ---\necho \"[INFO] Realizando dump de la base de datos de NetBox...\"\n(cd $NETBOX_DOCKER_DIR &amp;&amp; sudo docker-compose exec -T postgres sh -c 'pg_dump -U netbox netbox' &gt; $BACKUP_DIR/netbox_db.sql)\necho \"[SUCCESS] Dump de la base de datos completado.\"\n\n# --- 2. Backup de los Datos de Grafana ---\necho \"[INFO] Copiando datos del volumen de Grafana...\"\n# Montamos temporalmente el volumen en un contenedor para copiar los datos de forma segura\nsudo docker run --rm -v ${GRAFANA_VOLUME_NAME}:/data -v ${BACKUP_DIR}:/backup alpine tar -czf /backup/grafana_data.tar.gz -C /data .\necho \"[SUCCESS] Datos de Grafana comprimidos.\"\n\n# --- 3. Backup de los Archivos de Configuraci\u00f3n ---\n# (Prometheus, Ansible, etc. asumimos que est\u00e1n en un repo Git, por lo que el backup es el 'git push')\n\n# --- 4. Comprimir el Backup Diario ---\nFINAL_ARCHIVE=\"/mnt/backups/infra_backup_$(date +%Y-%m-%d).tar.gz\"\necho \"[INFO] Creando archivo final: ${FINAL_ARCHIVE}\"\ntar -czf $FINAL_ARCHIVE -C /mnt/backups/ $(date +%Y-%m-%d)\n\n# --- 5. Limpieza del Directorio Diario ---\nrm -rf $BACKUP_DIR\n\n# --- 6. Sincronizaci\u00f3n Off-site con Rclone ---\nif command -v rclone &amp;&gt; /dev/null; then\n    echo \"[INFO] Sincronizando el backup con el almacenamiento remoto (${RCLONE_REMOTE})...\"\n    rclone copy $FINAL_ARCHIVE ${RCLONE_REMOTE}\n    echo \"[SUCCESS] Sincronizaci\u00f3n completada.\"\nelse\n    echo \"[WARNING] rclone no est\u00e1 instalado. Omitiendo backup off-site.\"\nfi\n\necho \"[INFO] Proceso de backup finalizado.\"\n</code></pre>"},{"location":"fase5_seguridad_backups/backups/#automatizacion-con-cron","title":"Automatizaci\u00f3n con Cron","text":"<p>Ejecuta <code>sudo crontab -e</code> y a\u00f1ade una l\u00ednea para ejecutar el script diariamente.</p> <pre><code># Ejecutar el script de backup todos los d\u00edas a las 3:05 AM\n5 3 * * * /opt/scripts/backup_infra.sh &gt;&gt; /var/log/backup_infra.log 2&gt;&amp;1\n</code></pre>"},{"location":"fase5_seguridad_backups/backups/#restorability-is-more-important-than-backups","title":"restorability-is-more-important-than-backups","text":"<p>Un backup que no ha sido probado es solo una suposici\u00f3n. Debes probar peri\u00f3dicamente tu capacidad de restauraci\u00f3n.</p> <ul> <li>Plan de Prueba Trimestral: Cada tres meses, despliega un nuevo VPS temporal y sigue un manual de restauraci\u00f3n documentado para reconstruir tu NetBox y Grafana a partir de los backups. Mide el tiempo que tardas (esto es tu Tiempo de Recuperaci\u00f3n Objetivo - RTO).</li> <li>Documenta el Proceso: Crea un <code>RESTAURACION.md</code> en tu documentaci\u00f3n con los pasos exactos para la recuperaci\u00f3n. Cuando ocurra un desastre real, no querr\u00e1s estar adivinando los comandos.</li> </ul>"},{"location":"fase5_seguridad_backups/hardening/","title":"\ud83d\udd12 Fase 5 \u2013 Hardening Automatizado de Nodos Windows","text":""},{"location":"fase5_seguridad_backups/hardening/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<p>Ir m\u00e1s all\u00e1 de la configuraci\u00f3n b\u00e1sica de seguridad y aplicar un conjunto de configuraciones de fortalecimiento (hardening) de forma autom\u00e1tica y consistente a todos los nodos. El objetivo es reducir la superficie de ataque del sistema operativo Windows, deshabilitando caracter\u00edsticas innecesarias y aplicando pol\u00edticas de seguridad estrictas.</p>"},{"location":"fase5_seguridad_backups/hardening/#que-es-el-hardening","title":"\ud83e\udd14 \u00bfQu\u00e9 es el Hardening?","text":"<p>El hardening es el proceso de asegurar un sistema mediante la reducci\u00f3n de sus vulnerabilidades. Un sistema operativo, por defecto, viene con muchas caracter\u00edsticas habilitadas para maximizar la compatibilidad y la facilidad de uso, no la seguridad. El hardening revierte esto, aplicando el principio de \"lo que no es expl\u00edcitamente necesario, debe estar deshabilitado\".</p> <p>Para una operaci\u00f3n profesional, no puedes hacer esto manualmente. Necesitas un playbook de Ansible que verifique y aplique estas configuraciones de forma idempotente.</p>"},{"location":"fase5_seguridad_backups/hardening/#playbook-de-hardening-basico","title":"\ud83d\udee1\ufe0f Playbook de Hardening B\u00e1sico","text":"<p>Este playbook es un ejemplo que aplica algunas de las recomendaciones de seguridad m\u00e1s comunes. Un playbook de hardening en un entorno de producci\u00f3n real podr\u00eda tener cientos de tareas.</p> <p><code>harden_windows.yml</code></p> <pre><code>---\n- name: Aplicar Linea Base de Seguridad a Nodos Windows\n  hosts: Nodo_Cliente\n  gather_facts: no\n\n  tasks:\n    - name: Deshabilitar el servicio de Escritorio Remoto (RDP)\n      ansible.windows.win_service:\n        name: TermService # Nombre del servicio de RDP\n        state: stopped\n        start_mode: disabled\n      when: \"'servidor' not in group_names\" # Ejemplo: no aplicar a servidores de gesti\u00f3n\n\n    - name: Deshabilitar NetBIOS sobre TCP/IP\n      ansible.windows.win_regedit:\n        path: HKLM:\\SYSTEM\\CurrentControlSet\\Services\\NetBT\\Parameters\\Interfaces\\Tcpip_{{ item.Name }}\n        name: NetbiosOptions\n        data: 2\n        type: dword\n      loop: \"{{ ansible_interfaces | selectattr('ipv4.address', 'defined') | list }}\"\n      loop_control:\n        label: \"{{ item.name }}\"\n\n    - name: Configurar politica de contrasenas\n      community.windows.win_security_policy:\n        section: System Access\n        key: MinimumPasswordLength\n        value: 14\n\n    - name: Habilitar el Firewall de Windows para todos los perfiles\n      ansible.windows.win_firewall:\n        profiles: \n          - Domain\n          - Private\n          - Public\n        state: on\n        block_inbound_rules: yes\n\n    - name: Deshabilitar cuentas de invitado\n      ansible.windows.win_user:\n        name: Guest\n        state: present\n        account_disabled: yes\n</code></pre> <p>An\u00e1lisis de las Tareas de Hardening: 1.  Deshabilitar RDP: El Escritorio Remoto es un vector de ataque muy com\u00fan. A menos que sea estrictamente necesario, debe estar deshabilitado. La condici\u00f3n <code>when</code> es un ejemplo de c\u00f3mo podr\u00edas evitar aplicar esta regla a ciertos grupos de hosts. 2.  Deshabilitar NetBIOS: Un protocolo antiguo que puede ser usado para obtener informaci\u00f3n de la red. Se deshabilita modificando una clave del registro de Windows para cada interfaz de red. 3.  Pol\u00edtica de Contrase\u00f1as: Se utiliza el m\u00f3dulo <code>win_security_policy</code> para forzar pol\u00edticas de seguridad locales, como la longitud m\u00ednima de la contrase\u00f1a. 4.  Habilitar Firewall: Se asegura de que el Firewall de Windows est\u00e9 activado para todos los perfiles de red y que, por defecto, bloquee las conexiones entrantes que no tengan una regla expl\u00edcita de \"Allow\". 5.  Deshabilitar Cuenta de Invitado: La cuenta <code>Guest</code> es un riesgo de seguridad y debe estar siempre deshabilitada.</p>"},{"location":"fase5_seguridad_backups/hardening/#implementacion-y-mejora-continua","title":"\ud83d\ude80 Implementaci\u00f3n y Mejora Continua","text":"<ul> <li>Ejecuci\u00f3n Peri\u00f3dica: Este playbook no es para ejecutarlo una sola vez. Deber\u00edas programarlo (usando AWX o cron) para que se ejecute peri\u00f3dicamente (ej: semanalmente) en toda tu flota. Esto corrige cualquier \"desviaci\u00f3n de configuraci\u00f3n\" que haya podido ocurrir.</li> <li>Basado en Est\u00e1ndares: Para un hardening de nivel profesional, basa tus playbooks en est\u00e1ndares reconocidos como los CIS Benchmarks (Center for Internet Security) o las gu\u00edas STIG (Security Technical Implementation Guides). Existen roles de Ansible pre-hechos (aunque a menudo comerciales) que automatizan la aplicaci\u00f3n de estos est\u00e1ndares.</li> <li>Auditor\u00eda: El resultado de la ejecuci\u00f3n de este playbook es, en s\u00ed mismo, un informe de auditor\u00eda. Te muestra qu\u00e9 nodos estaban cumpliendo la pol\u00edtica y cu\u00e1les necesitaron ser corregidos.</li> </ul>"},{"location":"fase5_seguridad_backups/seguridad/","title":"\ud83d\udd12 Fase 5 \u2013 Hardening, Secretos y Control de Acceso","text":""},{"location":"fase5_seguridad_backups/seguridad/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<p>Implementar una estrategia de seguridad de varias capas para proteger la infraestructura. Esto implica fortalecer la configuraci\u00f3n de los servicios expuestos (<code>hardening</code>), gestionar de forma segura las credenciales y tokens (<code>secret management</code>), y asegurar las interfaces de gesti\u00f3n con autenticaci\u00f3n de m\u00faltiples factores (<code>MFA</code>).</p>"},{"location":"fase5_seguridad_backups/seguridad/#el-principio-de-minimo-privilegio","title":"\ud83e\udd14 El Principio de M\u00ednimo Privilegio","text":"<p>La estrategia de seguridad se basa en este principio: cada componente del sistema solo debe tener los permisos estrictamente necesarios para realizar su funci\u00f3n, y nada m\u00e1s. Aplicaremos esto a los secretos, el acceso SSH y las cuentas de usuario.</p>"},{"location":"fase5_seguridad_backups/seguridad/#gestion-de-secretos-con-ansible-vault","title":"\ud83d\udd11 Gesti\u00f3n de Secretos con Ansible Vault","text":"<p>El Problema: Poner contrase\u00f1as, tokens de API o claves SSH en texto plano dentro de tu c\u00f3digo es una de las peores pr\u00e1cticas de seguridad. Si tu c\u00f3digo se filtra o se sube a un repositorio p\u00fablico, toda tu infraestructura queda comprometida.</p> <p>La Soluci\u00f3n: Ansible Vault es una herramienta integrada en Ansible que permite encriptar archivos de variables o incluso variables individuales. Estos \"vaults\" solo se pueden desencriptar con una contrase\u00f1a que t\u00fa posees.</p>"},{"location":"fase5_seguridad_backups/seguridad/#1-crear-un-vault-central","title":"1. Crear un Vault Central","text":"<p>Por convenci\u00f3n, los secretos que se aplican a todos los hosts se guardan en <code>group_vars/all/vault.yml</code>.</p> <pre><code># Crea el directorio si no existe\nmkdir -p group_vars/all\n\n# Crea y edita el archivo encriptado\nansible-vault create group_vars/all/vault.yml\n</code></pre> <ul> <li>Se te pedir\u00e1 que crees y confirmes una contrase\u00f1a para la b\u00f3veda. Usa una contrase\u00f1a fuerte y gu\u00e1rdala en tu gestor de contrase\u00f1as.</li> <li>Se abrir\u00e1 un editor de texto. A\u00f1ade tus secretos:   <code>yaml   # group_vars/all/vault.yml   netbox_api_token: TU_TOKEN_DE_API_DE_NETBOX_AQUI</code></li> </ul>"},{"location":"fase5_seguridad_backups/seguridad/#2-referenciar-los-secretos-de-forma-segura","title":"2. Referenciar los Secretos de Forma Segura","text":"<p>Actualiza tu archivo de inventario din\u00e1mico (<code>produccion.netbox.yml</code>) para que lea el token desde el vault. Ansible lo har\u00e1 autom\u00e1ticamente por convenci\u00f3n de nombres, pero para ser expl\u00edcitos:</p> <pre><code># produccion.netbox.yml\nplugin: netbox.netbox.nb_inventory\napi_endpoint: http://&lt;IP_DE_TU_SERVIDOR_NETBOX&gt;\ntoken: \"{{ netbox_api_token }}\" # Ansible buscar\u00e1 esta variable en los archivos de group_vars\n# ... resto del archivo\n</code></pre>"},{"location":"fase5_seguridad_backups/seguridad/#3-ejecutar-playbooks-con-el-vault","title":"3. Ejecutar Playbooks con el Vault","text":"<p>Para que Ansible pueda desencriptar el archivo, debes proporcionar la contrase\u00f1a al ejecutar un playbook. Hay dos maneras:</p> <ul> <li>Interactivo (Recomendado para uso manual): <code>bash   ansible-playbook -i produccion.netbox.yml mi_playbook.yml --ask-vault-pass</code></li> <li>Usando un Archivo de Contrase\u00f1a (Para Scripts o CI/CD):</li> <li>Crea un archivo (ej: <code>.vault_pass</code>) que contenga solo la contrase\u00f1a del vault.</li> <li>Aseg\u00farate de que este archivo tenga permisos muy restrictivos: <code>chmod 600 .vault_pass</code>.</li> <li>Ejecuta el playbook: <code>ansible-playbook -i produccion.netbox.yml mi_playbook.yml --vault-password-file .vault_pass</code></li> </ul>"},{"location":"fase5_seguridad_backups/seguridad/#hardening-del-servidor-ssh","title":"\ud83d\udee1\ufe0f Hardening del Servidor SSH","text":"<p>El acceso SSH es la puerta de entrada a tus nodos. Debemos hacerlo lo m\u00e1s seguro posible.</p> <p>Playbook <code>harden_ssh.yml</code></p> <pre><code>---\n- name: Fortalecer la Configuracion del Servidor SSH en Nodos Windows\n  hosts: Nodo_Cliente\n  gather_facts: no\n\n  tasks:\n    - name: Aplicar configuraciones de seguridad a sshd_config\n      ansible.windows.win_lineinfile:\n        path: C:\\ProgramData\\ssh\\sshd_config\n        regexp: \"^#?{{ item.key }}\"\n        line: \"{{ item.key }} {{ item.value }}\"\n        state: present\n      loop:\n        - { key: 'PasswordAuthentication', value: 'no' } # Deshabilita login con contrase\u00f1a\n        - { key: 'PermitRootLogin', value: 'no' } # Proh\u00edbe el login del usuario Administrador\n        - { key: 'PubkeyAuthentication', value: 'yes' } # Asegura que la autenticaci\u00f3n por clave est\u00e9 activa\n        - { key: 'PermitEmptyPasswords', value: 'no' } # No permitir contrase\u00f1as vac\u00edas\n\n    - name: Reiniciar el servicio SSHD para aplicar los cambios\n      ansible.windows.win_service:\n        name: sshd\n        state: restarted\n</code></pre> <ul> <li>Loop: Este playbook usa un <code>loop</code> para aplicar m\u00faltiples configuraciones de forma limpia y eficiente.</li> <li>\u00a1ADVERTENCIA! Antes de ejecutar esto, aseg\u00farate de que tu acceso con clave SSH funciona perfectamente. Si no, perder\u00e1s el acceso a tus nodos.</li> </ul>"},{"location":"fase5_seguridad_backups/seguridad/#autenticacion-de-multiples-factores-mfa2fa","title":"\ud83d\udd10 Autenticaci\u00f3n de M\u00faltiples Factores (MFA/2FA)","text":"<p>Proteger tus interfaces de gesti\u00f3n es tan importante como proteger los nodos. Un atacante que acceda a tu NetBox o Grafana puede causar estragos.</p> <ul> <li>NetBox: Ve a tu perfil de usuario &gt; Two-Factor Authentication. Habil\u00edtalo usando una aplicaci\u00f3n de autenticaci\u00f3n como Google Authenticator, Authy o una llave de seguridad f\u00edsica como YubiKey.</li> <li>Grafana: Ve a tu perfil de usuario &gt; Security &gt; Two-factor auth. El proceso es similar.</li> </ul> <p>MFA es una de las formas m\u00e1s efectivas de prevenir el acceso no autorizado a cuentas.</p>"},{"location":"fase6_escalabilidad/plantilla-cliente/","title":"\ud83e\uddec Fase 6 \u2013 Plantillas de Cliente para una Escalabilidad Ordenada","text":""},{"location":"fase6_escalabilidad/plantilla-cliente/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<p>Definir y estandarizar el concepto de una \"Plantilla de Cliente\". Esta plantilla es un conjunto de objetos y configuraciones l\u00f3gicas en tus sistemas de gesti\u00f3n que te permitir\u00e1n incorporar (onboard) y gestionar nuevos clientes de una manera r\u00e1pida, consistente y aislada.</p>"},{"location":"fase6_escalabilidad/plantilla-cliente/#por-que-necesitas-una-plantilla","title":"\ud83e\udd14 \u00bfPor qu\u00e9 necesitas una Plantilla?","text":"<p>A medida que creces, la complejidad aumenta. Gestionar 2 clientes con 10 nodos cada uno es muy diferente a gestionar 25 clientes. Sin un modelo est\u00e1ndar, te arriesgas a: - Configuraciones Inconsistentes: Cada cliente se configura de una manera ligeramente diferente, lo que hace que la automatizaci\u00f3n sea una pesadilla. - Falta de Aislamiento: Una operaci\u00f3n destinada al Cliente A podr\u00eda afectar accidentalmente al Cliente B. - Onboarding Lento: Incorporar un nuevo cliente se convierte en un largo proyecto de descubrimiento en lugar de un proceso predecible.</p> <p>Una plantilla resuelve esto al convertir el onboarding de clientes en un proceso de \"rellenar los huecos\".</p>"},{"location":"fase6_escalabilidad/plantilla-cliente/#componentes-de-la-plantilla-de-cliente-en-netbox","title":"\ud83e\uddf1 Componentes de la Plantilla de Cliente en NetBox","text":"<p>NetBox est\u00e1 dise\u00f1ado para la multi-tenencia. Usaremos sus caracter\u00edsticas nativas para modelar a nuestros clientes.</p>"},{"location":"fase6_escalabilidad/plantilla-cliente/#1-tenants-inquilinos","title":"1. Tenants (Inquilinos)","text":"<p>El objeto Tenant es la representaci\u00f3n directa de un cliente. Proporciona el nivel m\u00e1s alto de agrupaci\u00f3n l\u00f3gica.</p> <ul> <li>Creaci\u00f3n:<ul> <li>Ruta: <code>Tenancy &gt; Tenants &gt; + Add</code></li> <li>Name: <code>Cliente A</code> (El nombre comercial del cliente)</li> <li>Group: <code>Clientes Comerciales</code> (Puedes crear grupos para organizar tenants)</li> </ul> </li> </ul>"},{"location":"fase6_escalabilidad/plantilla-cliente/#2-tags-etiquetas","title":"2. Tags (Etiquetas)","text":"<p>Los Tags son etiquetas de metadatos flexibles y de colores que son cruciales para la automatizaci\u00f3n. A diferencia de los Tenants, puedes asignar m\u00faltiples tags a un objeto.</p> <ul> <li>Creaci\u00f3n:<ul> <li>Ruta: <code>Organization &gt; Tags &gt; + Add</code></li> <li>Name: <code>cliente-a</code> (Mejor pr\u00e1ctica: usa un nombre en min\u00fasculas, sin espacios, apto para URLs y nombres de grupo en Ansible. Esto se llama \"slug\").</li> <li>Content Types: Asigna el tag para que se pueda aplicar a <code>dcim &gt; device</code>.</li> </ul> </li> </ul>"},{"location":"fase6_escalabilidad/plantilla-cliente/#3-asignacion-a-dispositivos","title":"3. Asignaci\u00f3n a Dispositivos","text":"<p>Cuando registras un nuevo dispositivo, ahora debes asignarle tanto el Tenant como el Tag correspondiente. Esto enriquece el modelo de datos y permite un filtrado y una automatizaci\u00f3n muy precisos.</p>"},{"location":"fase6_escalabilidad/plantilla-cliente/#uso-de-la-plantilla-en-la-automatizacion-ansible","title":"\ud83e\udd16 Uso de la Plantilla en la Automatizaci\u00f3n (Ansible)","text":"<p>Aqu\u00ed es donde el modelado de NetBox da sus frutos. Tu archivo de inventario din\u00e1mico (<code>produccion.netbox.yml</code>) ya est\u00e1 configurado con <code>group_by: - tags</code> y <code>group_by: - tenants</code>. Esto significa que Ansible crea autom\u00e1ticamente grupos basados en estos objetos.</p>"},{"location":"fase6_escalabilidad/plantilla-cliente/#ejemplo-ejecutar-un-playbook-solo-para-el-cliente-a","title":"Ejemplo: Ejecutar un Playbook solo para el Cliente A","text":"<p>Imagina que el Cliente A solicita que se instale <code>Microsoft Edge</code> en todos sus nodos.</p> <p><code>cliente_a_edge.yml</code></p> <pre><code>---\n- name: Instalar Microsoft Edge para el Cliente A\n  # Usamos el grupo creado a partir del Tag. Es m\u00e1s limpio y espec\u00edfico.\n  hosts: tag_cliente_a \n  gather_facts: no\n\n  tasks:\n    - name: Instalar el paquete de Microsoft Edge\n      ansible.windows.win_chocolatey:\n        name: microsoft-edge\n        state: present\n</code></pre> <p>Al ejecutar este playbook, tienes la garant\u00eda de que solo se aplicar\u00e1 a los dispositivos que tengan el tag <code>cliente-a</code> en NetBox. Has logrado un aislamiento total de la operaci\u00f3n.</p>"},{"location":"fase6_escalabilidad/plantilla-cliente/#proceso-de-onboarding-para-un-nuevo-cliente-cliente-b","title":"\ud83d\udccb Proceso de Onboarding para un Nuevo Cliente (\"Cliente B\")","text":"<p>Este es ahora tu Manual de Operaciones Est\u00e1ndar para el crecimiento:</p> <ol> <li> <p>[NetBox] Crear Objetos L\u00f3gicos:</p> <ul> <li>Crear el Tenant <code>Cliente B</code>.</li> <li>Crear el Tag <code>cliente-b</code>.</li> </ul> </li> <li> <p>[Operador/T\u00fa] Aprovisionamiento F\u00edsico y de Red:</p> <ul> <li>El operador local instala los 10 MiniPCs.</li> <li>Se les asignan las IPs correspondientes.</li> <li>Se habilita el acceso SSH en cada uno.</li> </ul> </li> <li> <p>[T\u00fa - Automatizaci\u00f3n] Registro y Configuraci\u00f3n Base:</p> <ul> <li>Ejecutas tu script <code>registrar_nodos.py</code>, modificado para que ahora asigne el Tenant <code>Cliente B</code> y el Tag <code>cliente-b</code> a los nuevos dispositivos.</li> <li>Verificas que el nuevo grupo <code>tag_cliente_b</code> aparece en el inventario de Ansible (<code>ansible-inventory -i produccion.netbox.yml --graph</code>).</li> <li>Ejecutas tu conjunto de playbooks de configuraci\u00f3n inicial (Chocolatey, exporter, hardening) limitando la ejecuci\u00f3n al nuevo grupo:     <code>bash     ansible-playbook -i produccion.netbox.yml install_base_software.yml -l tag_cliente_b</code><ul> <li>El flag <code>-l</code> (o <code>--limit</code>) es tu bistur\u00ed para aplicar operaciones a un subconjunto espec\u00edfico de tu infraestructura.</li> </ul> </li> </ul> </li> </ol> <p>En menos de una hora, puedes tener un cliente completamente nuevo, con 10 nodos, registrado, configurado de forma consistente y monitoreado, todo gracias a haber definido una plantilla clara.</p>"},{"location":"fase6_escalabilidad/replicacion/","title":"\ud83e\uddec Fase 6 \u2013 Manual de Operaciones: Procesos de Replicaci\u00f3n","text":""},{"location":"fase6_escalabilidad/replicacion/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<p>Documentar los Manuales de Operaciones Est\u00e1ndar (SOPs) para los dos escenarios de crecimiento m\u00e1s comunes: a\u00f1adir un nuevo nodo a un cliente existente y dar de alta a un cliente completamente nuevo. El objetivo es que cualquier miembro del equipo (o incluso t\u00fa mismo en el futuro) pueda seguir estos pasos de forma mec\u00e1nica y sin errores.</p>"},{"location":"fase6_escalabilidad/replicacion/#escenario-1-anadir-un-nuevo-nodo-a-un-cliente-existente","title":"Escenario 1: A\u00f1adir un Nuevo Nodo a un Cliente Existente","text":"<p>Situaci\u00f3n: El <code>Cliente A</code> est\u00e1 satisfecho y quiere a\u00f1adir un 11\u00ba MiniPC a su red.</p>"},{"location":"fase6_escalabilidad/replicacion/#checklist-del-proceso-sop-add-node-01","title":"\ud83d\udccb Checklist del Proceso (SOP-ADD-NODE-01)","text":"<p>Fase I: Aprovisionamiento F\u00edsico (Responsable: Operador Local) 1.  \u2610 Conectar Hardware: Conectar el nuevo MiniPC al switch PoE y a la corriente. 2.  \u2610 Asignar IP Fija: Configurar el sistema operativo con la siguiente IP p\u00fablica disponible del bloque del cliente (ej: <code>50.190.105.91</code>). 3.  \u2610 Habilitar Acceso: Ejecutar el script <code>enable-ssh.ps1</code> para activar el servidor SSH. 4.  \u2610 Validaci\u00f3n Local: Realizar el checklist de validaci\u00f3n local de la Fase 0 (ipconfig, ping al gateway, ping a 8.8.8.8). 5.  \u2610 Notificar al Gestor: Comunicar al gestor remoto que el nodo est\u00e1 f\u00edsicamente listo, proporcionando la IP asignada.</p> <p>Fase II: Integraci\u00f3n L\u00f3gica (Responsable: Gestor Remoto) 1.  \u2610 Validar Acceso Remoto:     -   Verificar que puedes hacer <code>ping</code> a la nueva IP desde Colombia.     -   Verificar que el puerto 22 est\u00e1 abierto: <code>nc -zv 50.190.105.91 22</code>.     -   Realizar una conexi\u00f3n SSH exitosa: <code>ssh admin@50.190.105.91</code>. 2.  \u2610 Registrar en NetBox:     -   A\u00f1adir el nuevo dispositivo <code>cliente-a-nodo-11</code>.     -   Asignarle la IP <code>50.190.105.91</code>.     -   Crucial: Asignarle el Tenant <code>Cliente A</code> y el Tag <code>cliente-a</code> para que herede las pol\u00edticas y la automatizaci\u00f3n del cliente. 3.  \u2610 Ejecutar Configuraci\u00f3n Base:     -   Verificar que el nuevo nodo aparece en el inventario din\u00e1mico: <code>ansible-inventory -i produccion.netbox.yml --graph | grep cliente-a-nodo-11</code>.     -   Ejecutar el conjunto de playbooks de configuraci\u00f3n inicial, limitando la ejecuci\u00f3n al nuevo host para m\u00e1xima seguridad y eficiencia:         <code>bash         ansible-playbook -i produccion.netbox.yml install_base.yml --limit cliente-a-nodo-11         ansible-playbook -i produccion.netbox.yml install_monitoring.yml --limit cliente-a-nodo-11         ansible-playbook -i produccion.netbox.yml harden_security.yml --limit cliente-a-nodo-11</code> (Nota: Es una buena pr\u00e1ctica agrupar playbooks en uno maestro, como <code>install_base.yml</code>) 4.  \u2610 Verificaci\u00f3n Final:     -   Comprobar en Prometheus (Targets) que el nuevo nodo est\u00e1 <code>UP</code>.     -   Verificar en Grafana que las m\u00e9tricas del <code>cliente-a-nodo-11</code> son visibles.</p>"},{"location":"fase6_escalabilidad/replicacion/#escenario-2-onboarding-de-un-nuevo-cliente","title":"Escenario 2: Onboarding de un Nuevo Cliente","text":"<p>Situaci\u00f3n: La <code>Empresa B</code> te contrata para gestionar un nuevo cl\u00faster de 10 MiniPCs.</p>"},{"location":"fase6_escalabilidad/replicacion/#checklist-del-proceso-sop-new-client-01","title":"\ud83d\udccb Checklist del Proceso (SOP-NEW-CLIENT-01)","text":"<p>Fase I: Preparaci\u00f3n L\u00f3gica (Responsable: Gestor Remoto) 1.  \u2610 Crear Tenant en NetBox: Crear el Tenant <code>Cliente B</code>. 2.  \u2610 Crear Tag en NetBox: Crear el Tag <code>cliente-b</code>. 3.  \u2610 Asignar Recursos de Red: Si el cliente tiene su propio bloque de IPs, crear el nuevo <code>Prefix</code> en el IPAM de NetBox. 4.  \u2610 Preparar Variables de Ansible: Si el cliente tiene configuraciones especiales, crear un archivo de variables para su grupo (ej: <code>group_vars/tag_cliente_b/vars.yml</code>).</p> <p>Fase II: Aprovisionamiento F\u00edsico en Lote (Responsable: Operador Local) 1.  \u2610 Ejecutar SOP-ADD-NODE-01 para cada uno de los 10 nuevos MiniPCs, usando el rango de IPs asignado al Cliente B.</p> <p>Fase III: Integraci\u00f3n y Configuraci\u00f3n en Lote (Responsable: Gestor Remoto) 1.  \u2610 Validar Acceso Remoto a los 10 nuevos nodos. 2.  \u2610 Registrar en Lote en NetBox: Ejecutar el script <code>registrar_nodos.py</code>, adaptado con las variables del Cliente B (nombre, tag, rango de IPs). 3.  \u2610 Ejecutar Configuraci\u00f3n Base en Lote:     -   Verificar que el nuevo grupo <code>tag_cliente_b</code> existe en el inventario.     -   Ejecutar los playbooks de configuraci\u00f3n inicial, esta vez limitando la ejecuci\u00f3n al nuevo grupo de tags:         <code>bash         ansible-playbook -i produccion.netbox.yml install_base.yml -l tag_cliente_b</code> 4.  \u2610 Verificaci\u00f3n Final:     -   Verificar en Prometheus y Grafana que los 10 nuevos nodos del Cliente B est\u00e1n siendo monitoreados.</p>"},{"location":"fase6_escalabilidad/replicacion/#clave-del-exito-el-checklist","title":"\ud83e\udde0 Clave del \u00c9xito: El Checklist","text":"<p>Tener estos procesos documentados como checklists es la diferencia entre una operaci\u00f3n artesanal y una operaci\u00f3n de nivel empresarial. Asegura que no se omita ning\u00fan paso, que la calidad sea consistente y te permite delegar estas tareas en el futuro con confianza.</p>"},{"location":"fase6_escalabilidad/roadmap/","title":"\ud83e\uddec Fase 6 \u2013 Roadmap Estrat\u00e9gico de la Infraestructura","text":""},{"location":"fase6_escalabilidad/roadmap/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<p>Definir una hoja de ruta clara y estrat\u00e9gica para la evoluci\u00f3n de la plataforma. Este documento no es una lista de tareas, sino una gu\u00eda de visi\u00f3n a futuro que te ayudar\u00e1 a tomar decisiones tecnol\u00f3gicas, planificar inversiones de tiempo y mejorar continuamente el valor de tu servicio.</p>"},{"location":"fase6_escalabilidad/roadmap/#la-hoja-de-ruta-por-horizontes-de-tiempo","title":"\ud83d\uddfa\ufe0f La Hoja de Ruta por Horizontes de Tiempo","text":""},{"location":"fase6_escalabilidad/roadmap/#horizonte-1-mejoras-fundamentales-corto-plazo-proximos-3-6-meses","title":"\ud83d\ude80 Horizonte 1: Mejoras Fundamentales (Corto Plazo: Pr\u00f3ximos 3-6 meses)","text":"<ul> <li> <p>Centralizaci\u00f3n de Logs con Loki:</p> <ul> <li>Problema: Los logs de eventos y aplicaciones residen en cada nodo, lo que hace que la investigaci\u00f3n de incidentes sea lenta y dif\u00edcil.</li> <li>Soluci\u00f3n: Desplegar Grafana Loki, el componente de logging del stack de Grafana. Es ligero, se integra nativamente con Prometheus y te permite buscar y analizar logs de toda tu flota desde la misma interfaz de Grafana.</li> <li>Beneficio: Capacidad de correlacionar m\u00e9tricas (ej: un pico de CPU) con los logs exactos que ocurrieron en ese mismo instante, mejorando dr\u00e1sticamente la velocidad de diagn\u00f3stico (MTTR).</li> </ul> </li> <li> <p>Interfaz Gr\u00e1fica para Ansible con AWX/Tower:</p> <ul> <li>Problema: La ejecuci\u00f3n de playbooks desde la l\u00ednea de comandos es potente pero carece de control de acceso, auditor\u00eda y visibilidad para un equipo.</li> <li>Soluci\u00f3n: Instalar AWX (la versi\u00f3n de c\u00f3digo abierto de Ansible Tower). AWX proporciona una interfaz web para gestionar tu automatizaci\u00f3n con dashboards, control de acceso basado en roles (RBAC), programaci\u00f3n de trabajos y un historial completo.</li> <li>Beneficio: Puedes delegar de forma segura la ejecuci\u00f3n de ciertos playbooks a otros usuarios sin darles acceso SSH ni a los secretos del vault.</li> </ul> </li> <li> <p>Hardening de Seguridad Automatizado:</p> <ul> <li>Problema: La seguridad es un proceso continuo, no una configuraci\u00f3n \u00fanica.</li> <li>Soluci\u00f3n: Desarrollar un playbook de Ansible dedicado a aplicar una l\u00ednea base de seguridad (basada en est\u00e1ndares como CIS Benchmarks). Este playbook verificar\u00eda y corregir\u00eda peri\u00f3dicamente cientos de configuraciones de seguridad en el sistema operativo.</li> <li>Beneficio: Aumenta exponencialmente la postura de seguridad de los nodos y te permite generar informes de cumplimiento.</li> </ul> </li> </ul>"},{"location":"fase6_escalabilidad/roadmap/#horizonte-2-expansion-de-capacidades-mediano-plazo-proximos-6-12-meses","title":"\ud83d\udcc8 Horizonte 2: Expansi\u00f3n de Capacidades (Mediano Plazo: Pr\u00f3ximos 6-12 meses)","text":"<ul> <li> <p>Plano de Control Seguro con WireGuard:</p> <ul> <li>Problema: La dependencia de IPs p\u00fablicas y reglas de firewall por IP puede ser fr\u00e1gil, especialmente con clientes detr\u00e1s de redes restrictivas.</li> <li>Soluci\u00f3n: Implementar una Overlay VPN con WireGuard para crear un plano de control seguro y privado. Los nodos se conectar\u00edan a esta red privada para la gesti\u00f3n, independientemente de su IP p\u00fablica.</li> <li>Beneficio: Elimina la necesidad de exponer el puerto SSH a Internet, simplifica la conectividad y aumenta la seguridad del tr\u00e1fico de gesti\u00f3n.</li> </ul> </li> <li> <p>Gesti\u00f3n Avanzada de Secretos con HashiCorp Vault:</p> <ul> <li>Problema: Ansible Vault es bueno, pero no ofrece rotaci\u00f3n de secretos, leases din\u00e1micos ni una API centralizada.</li> <li>Soluci\u00f3n: Migrar a una soluci\u00f3n de gesti\u00f3n de secretos dedicada como HashiCorp Vault.</li> <li>Beneficio: Seguridad de nivel empresarial, con la capacidad de generar credenciales de corta duraci\u00f3n y auditar centralmente cada acceso a un secreto.</li> </ul> </li> </ul>"},{"location":"fase6_escalabilidad/roadmap/#horizonte-3-madurez-y-optimizacion-del-negocio-largo-plazo-12-meses","title":"\ud83d\udd2d Horizonte 3: Madurez y Optimizaci\u00f3n del Negocio (Largo Plazo: 12+ meses)","text":"<ul> <li> <p>Infraestructura como C\u00f3digo (IaC) para el Plano de Control:</p> <ul> <li>Problema: El propio servidor de gesti\u00f3n (con NetBox, Grafana, etc.) todav\u00eda se configura manualmente.</li> <li>Soluci\u00f3n: Usar Terraform para definir toda la infraestructura del plano de control (el VPS, las redes, los firewalls de nube) como c\u00f3digo. Esto te permitir\u00eda destruir y reconstruir todo tu entorno de gesti\u00f3n de forma 100% autom\u00e1tica.</li> <li>Beneficio: Resiliencia definitiva y capacidad de recuperaci\u00f3n ante desastres para tu propio negocio.</li> </ul> </li> <li> <p>Portal de Cliente y Autoservicio:</p> <ul> <li>Problema: Todas las solicitudes de los clientes (ver estado, pedir un reinicio) requieren tu intervenci\u00f3n manual.</li> <li>Soluci\u00f3n: Desarrollar un portal web simple donde los clientes puedan iniciar sesi\u00f3n y ver los dashboards de Grafana de sus propios nodos (usando las capacidades multi-tenant de Grafana) y quiz\u00e1s disparar acciones pre-aprobadas (como un reinicio) que ejecuten un playbook de Ansible a trav\u00e9s de la API de AWX.</li> <li>Beneficio: Aumenta enormemente el valor del servicio para el cliente y reduce tu carga operativa.</li> </ul> </li> </ul>"}]}